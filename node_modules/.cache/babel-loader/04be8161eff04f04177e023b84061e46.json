{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tt\\\\src\\\\components\\\\Resource.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectPawn, changePhaseTo, changeMessage, clearSelection } from '../actions';\nimport { message, WILD, WOOD, STONE, GLASS, WHEAT, BRICK } from './constants';\n\nclass Resource extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resourceSelection = resource => {\n      if (resource !== WILD) {\n        //select normal resource\n        this.props.clearSelection();\n        this.props.selectPawn(resource);\n        this.props.changeMessage(message.placeResource(resource.title));\n      } else {\n        //determine resource in wild case\n        const resSelectorBtn = [WOOD, STONE, GLASS, WHEAT, BRICK].map(resource => {\n          return React.createElement(React.Fragment, null, \" \", React.createElement(\"button\", {\n            onClick: () => {\n              this.resourceSelection(resource);\n            },\n            className: \"\".concat(resource.title.toLowerCase(), \" resourceBtn\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }), resource.title.toLowerCase());\n        });\n        console.log(resSelectorBtn);\n      }\n    };\n\n    this.renderResourceBtn = resource => {\n      return React.createElement(\"button\", {\n        onClick: () => {\n          this.resourceSelection(resource);\n        },\n        className: \"\".concat(resource.title.toLowerCase(), \" resourceBtn\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    if (!this.props.resource) {\n      return null;\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.renderResourceBtn(this.props.resource), this.props.resource.title.toLowerCase(), this.props.resource === WILD ? [WOOD, STONE, GLASS, WHEAT, BRICK].map(resource => {\n      return this.renderResourceBtn(resource);\n    }) : null);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase,\n    resource: state.resources[ownProps.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectPawn,\n  changePhaseTo,\n  changeMessage,\n  clearSelection\n})(Resource);","map":{"version":3,"sources":["D:\\Pro\\React\\tt\\src\\components\\Resource.js"],"names":["React","connect","selectPawn","changePhaseTo","changeMessage","clearSelection","message","WILD","WOOD","STONE","GLASS","WHEAT","BRICK","Resource","Component","resourceSelection","resource","props","placeResource","title","resSelectorBtn","map","toLowerCase","console","log","renderResourceBtn","render","mapStateToProps","state","ownProps","selectedPawn","phase","resources","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,EAAmDC,cAAnD,QAAyE,YAAzE;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,KAA5C,EAAmDC,KAAnD,QAAgE,aAAhE;;AAEA,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAEnCC,iBAFmC,GAEfC,QAAQ,IAAI;AAC5B,UAAIA,QAAQ,KAAKT,IAAjB,EAAuB;AACnB;AACA,aAAKU,KAAL,CAAWZ,cAAX;AACA,aAAKY,KAAL,CAAWf,UAAX,CAAsBc,QAAtB;AACA,aAAKC,KAAL,CAAWb,aAAX,CAAyBE,OAAO,CAACY,aAAR,CAAsBF,QAAQ,CAACG,KAA/B,CAAzB;AACH,OALD,MAKO;AACH;AACA,cAAMC,cAAc,GAAG,CAACZ,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCS,GAAnC,CAAuCL,QAAQ,IAAI;AACtE,iBAAQ,+CAAG;AACP,YAAA,OAAO,EAAE,MAAM;AAAE,mBAAKD,iBAAL,CAAuBC,QAAvB;AAAkC,aAD5C;AAEP,YAAA,SAAS,YAAKA,QAAQ,CAACG,KAAT,CAAeG,WAAf,EAAL,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,EAIHN,QAAQ,CAACG,KAAT,CAAeG,WAAf,EAJG,CAAR;AAMH,SAPsB,CAAvB;AASAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AAEH;AACJ,KAtBkC;;AAAA,SAwBnCK,iBAxBmC,GAwBfT,QAAQ,IAAI;AAC5B,aAAO;AACP,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKD,iBAAL,CAAuBC,QAAvB;AAAkC,SAD5C;AAEP,QAAA,SAAS,YAAKA,QAAQ,CAACG,KAAT,CAAeG,WAAf,EAAL,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAIH,KA7BkC;AAAA;;AA+BnCI,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKT,KAAL,CAAWD,QAAhB,EAA0B;AAAE,aAAO,IAAP;AAAa;;AAAA;AACzC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKS,iBAAL,CAAuB,KAAKR,KAAL,CAAWD,QAAlC,CADL,EAEK,KAAKC,KAAL,CAAWD,QAAX,CAAoBG,KAApB,CAA0BG,WAA1B,EAFL,EAIM,KAAKL,KAAL,CAAWD,QAAX,KAAwBT,IAAxB,GAA+B,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCS,GAAnC,CAAuCL,QAAQ,IAAI;AACpF,aAAO,KAAKS,iBAAL,CAAuBT,QAAvB,CAAP;AACH,KAFoC,CAA/B,GAGF,IAPJ,CADJ;AAWH;;AA5CkC;;AA+CvC,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHC,IAAAA,YAAY,EAAEF,KAAK,CAACE,YADjB;AAEHC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAFV;AAGHf,IAAAA,QAAQ,EAAEY,KAAK,CAACI,SAAN,CAAgBH,QAAQ,CAACI,EAAzB;AAHP,GAAP;AAKH,CAND;;AAQA,eAAehC,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,aAA7B;AAA4CC,EAAAA;AAA5C,CAAlB,CAAP,CAAuFQ,QAAvF,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectPawn, changePhaseTo, changeMessage, clearSelection } from '../actions';\r\nimport { message, WILD, WOOD, STONE, GLASS, WHEAT, BRICK } from './constants';\r\n\r\nclass Resource extends React.Component {\r\n\r\n    resourceSelection = resource => {\r\n        if (resource !== WILD) {\r\n            //select normal resource\r\n            this.props.clearSelection();\r\n            this.props.selectPawn(resource);\r\n            this.props.changeMessage(message.placeResource(resource.title));\r\n        } else {\r\n            //determine resource in wild case\r\n            const resSelectorBtn = [WOOD, STONE, GLASS, WHEAT, BRICK].map(resource => {\r\n                return (<> <button\r\n                    onClick={() => { this.resourceSelection(resource) }}\r\n                    className={`${resource.title.toLowerCase()} resourceBtn`}\r\n                ></button>\r\n                    {resource.title.toLowerCase()}\r\n                </>)\r\n            }\r\n            )\r\n            console.log(resSelectorBtn);\r\n\r\n        }\r\n    }\r\n\r\n    renderResourceBtn = resource => {\r\n        return <button\r\n        onClick={() => { this.resourceSelection(resource) }}\r\n        className={`${resource.title.toLowerCase()} resourceBtn`}\r\n    ></button>\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.resource) { return null };\r\n        return (\r\n            <div>\r\n                {this.renderResourceBtn(this.props.resource)}\r\n                {this.props.resource.title.toLowerCase()}\r\n\r\n                { this.props.resource === WILD ? [WOOD, STONE, GLASS, WHEAT, BRICK].map(resource => {\r\n                return this.renderResourceBtn(resource);\r\n            }\r\n            ) : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase,\r\n        resource: state.resources[ownProps.id]\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectPawn, changePhaseTo, changeMessage, clearSelection })(Resource);\r\n"]},"metadata":{},"sourceType":"module"}