{"ast":null,"code":"import _objectSpread from \"D:\\\\Pro\\\\React\\\\tlt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { INITIAL_STATE, EMPTY_SQUARE } from './../components/constants';\nimport { messageSelectResource } from './../components/messages';\nimport { SELECT_PAWN, SELECT_SQUARE, SELECT_PATTERN, CLEAR_SELECTION, PLACE_RESOURCE, PLACE_BUILDING, FETCH_BUILDING, CHANGE_PHASE, CHANGE_MESSAGE } from '../actions/types';\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CHANGE_PHASE:\n      return _objectSpread({}, state, {\n        phase: action.payload\n      });\n\n    case CHANGE_MESSAGE:\n      return _objectSpread({}, state, {\n        message: action.payload\n      });\n\n    case SELECT_PAWN:\n      return _objectSpread({}, state, {\n        selectedPawn: action.payload\n      });\n\n    case SELECT_SQUARE:\n      return _objectSpread({}, state, {\n        selectedSquare: action.payload\n      });\n\n    case SELECT_PATTERN:\n      if (state.selectedPattern.find(el => el === action.payload)) {\n        return _objectSpread({}, state, {\n          selectedPattern: state.selectedPattern.filter(el => el !== action.payload)\n        });\n      }\n\n      return _objectSpread({}, state, {\n        selectedPattern: [...state.selectedPattern, action.payload]\n      });\n\n    case CLEAR_SELECTION:\n      return _objectSpread({}, state, {\n        selectedSquare: null,\n        selectedPattern: [],\n        selectedPawn: null\n      });\n\n    case FETCH_BUILDING:\n      return _objectSpread({}, state, {\n        buildings: [...state.buildings, action.payload]\n      });\n\n    case PLACE_RESOURCE:\n      return _objectSpread({}, state, {\n        board: _objectSpread({}, state.board, {\n          [state.selectedSquare]: {\n            occupant: state.selectedPawn\n          }\n        }),\n        selectedSquare: null,\n        selectedPawn: null\n      });\n\n    case PLACE_BUILDING:\n      state.selectedPattern.forEach(cell => {\n        state.board[cell] = EMPTY_SQUARE; //some problem with building=resource joker!!!\n      });\n      return _objectSpread({}, state, {\n        board: _objectSpread({}, state.board, {\n          [state.selectedSquare]: {\n            occupant: state.selectedPawn\n          }\n        }),\n        selectedSquare: null,\n        selectedPawn: null,\n        selectedPattern: []\n      });\n\n    default:\n      return state;\n  }\n});\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\reducers\\index.js"],"names":["INITIAL_STATE","EMPTY_SQUARE","messageSelectResource","SELECT_PAWN","SELECT_SQUARE","SELECT_PATTERN","CLEAR_SELECTION","PLACE_RESOURCE","PLACE_BUILDING","FETCH_BUILDING","CHANGE_PHASE","CHANGE_MESSAGE","state","action","type","phase","payload","message","selectedPawn","selectedSquare","selectedPattern","find","el","filter","buildings","board","occupant","forEach","cell"],"mappings":";AAAA,SAASA,aAAT,EAAyBC,YAAzB,QAA6C,2BAA7C;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;AAEA,SACIC,WADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,cAPJ,EAQIC,YARJ,EASIC,cATJ,QAWO,kBAXP;AAeA,gBAAe,CAACC,KAAK,GAAGZ,aAAT,EAAwBa,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKJ,YAAL;AACI,+BAAYE,KAAZ;AAAmBG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAAjC;;AAEJ,SAAKL,cAAL;AACI,+BAAYC,KAAZ;AAAmBK,QAAAA,OAAO,EAAEJ,MAAM,CAACG;AAAnC;;AAEJ,SAAKb,WAAL;AACI,+BAAYS,KAAZ;AAAmBM,QAAAA,YAAY,EAAEL,MAAM,CAACG;AAAxC;;AAEJ,SAAKZ,aAAL;AACI,+BAAYQ,KAAZ;AAAmBO,QAAAA,cAAc,EAAEN,MAAM,CAACG;AAA1C;;AAEJ,SAAKX,cAAL;AACI,UAAIO,KAAK,CAACQ,eAAN,CAAsBC,IAAtB,CAA2BC,EAAE,IAAIA,EAAE,KAAKT,MAAM,CAACG,OAA/C,CAAJ,EAA6D;AACzD,iCAAYJ,KAAZ;AAAmBQ,UAAAA,eAAe,EAAER,KAAK,CAACQ,eAAN,CAAsBG,MAAtB,CAA6BD,EAAE,IAAIA,EAAE,KAAKT,MAAM,CAACG,OAAjD;AAApC;AACH;;AACD,+BAAYJ,KAAZ;AAAmBQ,QAAAA,eAAe,EAAE,CAAC,GAAGR,KAAK,CAACQ,eAAV,EAA2BP,MAAM,CAACG,OAAlC;AAApC;;AAEJ,SAAKV,eAAL;AACI,+BAAYM,KAAZ;AAAmBO,QAAAA,cAAc,EAAE,IAAnC;AAAyCC,QAAAA,eAAe,EAAE,EAA1D;AAA8DF,QAAAA,YAAY,EAAE;AAA5E;;AAEJ,SAAKT,cAAL;AACI,+BAAYG,KAAZ;AAAmBY,QAAAA,SAAS,EAAE,CAAC,GAAGZ,KAAK,CAACY,SAAV,EAAqBX,MAAM,CAACG,OAA5B;AAA9B;;AAGJ,SAAKT,cAAL;AACI,+BAAYK,KAAZ;AAAmBa,QAAAA,KAAK,oBAAOb,KAAK,CAACa,KAAb;AAAoB,WAACb,KAAK,CAACO,cAAP,GAAwB;AAAEO,YAAAA,QAAQ,EAAGd,KAAK,CAACM;AAAnB;AAA5C,UAAxB;AAAyGC,QAAAA,cAAc,EAAE,IAAzH;AAA+HD,QAAAA,YAAY,EAAE;AAA7I;;AAEJ,SAAKV,cAAL;AACII,MAAAA,KAAK,CAACQ,eAAN,CAAsBO,OAAtB,CAA8BC,IAAI,IAAI;AAClChB,QAAAA,KAAK,CAACa,KAAN,CAAYG,IAAZ,IAAoB3B,YAApB,CADkC,CACA;AACrC,OAFD;AAGA,+BAAYW,KAAZ;AAAmBa,QAAAA,KAAK,oBAAOb,KAAK,CAACa,KAAb;AAAoB,WAACb,KAAK,CAACO,cAAP,GAAwB;AAAEO,YAAAA,QAAQ,EAAEd,KAAK,CAACM;AAAlB;AAA5C,UAAxB;AAAwGC,QAAAA,cAAc,EAAE,IAAxH;AAA8HD,QAAAA,YAAY,EAAE,IAA5I;AAAkJE,QAAAA,eAAe,EAAE;AAAnK;;AAEJ;AACI,aAAOR,KAAP;AArCR;AAuCH,CAxCD;AA4CA","sourcesContent":["import { INITIAL_STATE,  EMPTY_SQUARE } from './../components/constants';\r\n\r\nimport { messageSelectResource } from './../components/messages';\r\n\r\nimport {\r\n    SELECT_PAWN,\r\n    SELECT_SQUARE,\r\n    SELECT_PATTERN,\r\n    CLEAR_SELECTION,\r\n    PLACE_RESOURCE,\r\n    PLACE_BUILDING,\r\n    FETCH_BUILDING,\r\n    CHANGE_PHASE,\r\n    CHANGE_MESSAGE\r\n\r\n} from '../actions/types'\r\n\r\n\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case CHANGE_PHASE:\r\n            return { ...state, phase: action.payload };\r\n\r\n        case CHANGE_MESSAGE:\r\n            return { ...state, message: action.payload };\r\n\r\n        case SELECT_PAWN:\r\n            return { ...state, selectedPawn: action.payload };\r\n\r\n        case SELECT_SQUARE:\r\n            return { ...state, selectedSquare: action.payload };\r\n\r\n        case SELECT_PATTERN:\r\n            if (state.selectedPattern.find(el => el === action.payload)) {\r\n                return { ...state, selectedPattern: state.selectedPattern.filter(el => el !== action.payload) };\r\n            }\r\n            return { ...state, selectedPattern: [...state.selectedPattern, action.payload] };\r\n\r\n        case CLEAR_SELECTION:\r\n            return { ...state, selectedSquare: null, selectedPattern: [], selectedPawn: null };\r\n\r\n        case FETCH_BUILDING:\r\n            return { ...state, buildings: [...state.buildings, action.payload] };\r\n\r\n\r\n        case PLACE_RESOURCE:\r\n            return { ...state, board: { ...state.board, [state.selectedSquare]: { occupant:  state.selectedPawn } }, selectedSquare: null, selectedPawn: null };\r\n\r\n        case PLACE_BUILDING:\r\n            state.selectedPattern.forEach(cell => {\r\n                state.board[cell] = EMPTY_SQUARE; //some problem with building=resource joker!!!\r\n            })\r\n            return { ...state, board: { ...state.board, [state.selectedSquare]: { occupant: state.selectedPawn } }, selectedSquare: null, selectedPawn: null, selectedPattern: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/"]},"metadata":{},"sourceType":"module"}