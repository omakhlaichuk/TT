{"ast":null,"code":"import _objectSpread from \"D:\\\\Pro\\\\React\\\\tlt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { SELECT_RESOURCE, SELECT_SQUARE, SELECT_PATTERN, CLEAR_SELECTION, PLACE_RESOURCE, CHANGE_PHASE } from '../actions/types';\nconst INITIAL_SQUARE = \"empty\"; //'wheet', 'wood'..., \"a1\", \"b2\",\"c2\"...\n\nconst INITIAL_BOARD = {\n  11: \"BLOCK\",\n  12: \"wheat\",\n  13: INITIAL_SQUARE,\n  14: INITIAL_SQUARE,\n  21: INITIAL_SQUARE,\n  22: INITIAL_SQUARE,\n  23: INITIAL_SQUARE,\n  24: INITIAL_SQUARE,\n  31: INITIAL_SQUARE,\n  32: INITIAL_SQUARE,\n  33: INITIAL_SQUARE,\n  34: INITIAL_SQUARE,\n  41: INITIAL_SQUARE,\n  42: INITIAL_SQUARE,\n  43: INITIAL_SQUARE,\n  44: INITIAL_SQUARE\n};\nconst INITIAL_STATE = {\n  //phase: \"RESOURCE_PHASE\",\n  phase: \"BUILDING_PHASE\",\n  selectedPawn: null,\n  selectedSquare: null,\n  selectedPattern: [],\n  board: INITIAL_BOARD\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CHANGE_PHASE:\n      return _objectSpread({}, state, {\n        phase: action.payload\n      });\n\n    case SELECT_RESOURCE:\n      return _objectSpread({}, state, {\n        selectedPawn: action.payload\n      });\n\n    case SELECT_SQUARE:\n      //state.board.selectedSquare = action.payload;\n      return _objectSpread({}, state, {\n        selectedSquare: action.payload\n      });\n\n    case SELECT_PATTERN:\n      if (state.selectedPattern.find(el => el === action.payload)) {\n        return _objectSpread({}, state, {\n          selectedPattern: state.selectedPattern.filter(el => el !== action.payload)\n        });\n      }\n\n      return _objectSpread({}, state, {\n        selectedPattern: [...state.selectedPattern, action.payload]\n      });\n\n    case CLEAR_SELECTION:\n      //state.board.selectedSquare = action.payload;\n      return _objectSpread({}, state, {\n        selectedSquare: null,\n        selectedPattern: [],\n        selectedPawn: null\n      });\n\n    case PLACE_RESOURCE:\n      return _objectSpread({}, state, {\n        board: _objectSpread({}, state.board, {\n          [state.selectedSquare]: state.selectedPawn\n        }),\n        selectedSquare: null,\n        selectedPawn: null\n      });\n\n    default:\n      return state;\n  }\n});\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\reducers\\index.js"],"names":["SELECT_RESOURCE","SELECT_SQUARE","SELECT_PATTERN","CLEAR_SELECTION","PLACE_RESOURCE","CHANGE_PHASE","INITIAL_SQUARE","INITIAL_BOARD","INITIAL_STATE","phase","selectedPawn","selectedSquare","selectedPattern","board","state","action","type","payload","find","el","filter"],"mappings":";AAAA,SACIA,eADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,cALJ,EAMIC,YANJ,QAQO,kBARP;AAUA,MAAMC,cAAc,GAAG,OAAvB,C,CAAgC;;AAGhC,MAAMC,aAAa,GAAG;AAElB,MAAI,OAFc;AAGlB,MAAI,OAHc;AAIlB,MAAID,cAJc;AAKlB,MAAIA,cALc;AAMlB,MAAIA,cANc;AAOlB,MAAIA,cAPc;AAQlB,MAAIA,cARc;AASlB,MAAIA,cATc;AAUlB,MAAIA,cAVc;AAWlB,MAAIA,cAXc;AAYlB,MAAIA,cAZc;AAalB,MAAIA,cAbc;AAclB,MAAIA,cAdc;AAelB,MAAIA,cAfc;AAgBlB,MAAIA,cAhBc;AAiBlB,MAAIA;AAjBc,CAAtB;AAqBA,MAAME,aAAa,GAAG;AAClB;AACAC,EAAAA,KAAK,EAAE,gBAFW;AAGlBC,EAAAA,YAAY,EAAE,IAHI;AAIlBC,EAAAA,cAAc,EAAE,IAJE;AAKlBC,EAAAA,eAAe,EAAE,EALC;AAMlBC,EAAAA,KAAK,EAAEN;AANW,CAAtB;AASA,gBAAe,CAACO,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKX,YAAL;AACI,+BAAYS,KAAZ;AAAmBL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAAjC;;AAEJ,SAAKjB,eAAL;AACI,+BAAYc,KAAZ;AAAmBJ,QAAAA,YAAY,EAAEK,MAAM,CAACE;AAAxC;;AAEJ,SAAKhB,aAAL;AACI;AACA,+BAAYa,KAAZ;AAAmBH,QAAAA,cAAc,EAAEI,MAAM,CAACE;AAA1C;;AAEJ,SAAKf,cAAL;AACI,UAAIY,KAAK,CAACF,eAAN,CAAsBM,IAAtB,CAA2BC,EAAE,IAAIA,EAAE,KAAKJ,MAAM,CAACE,OAA/C,CAAJ,EAA6D;AACzD,iCAAYH,KAAZ;AAAmBF,UAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,CAAsBQ,MAAtB,CAA6BD,EAAE,IAAIA,EAAE,KAAKJ,MAAM,CAACE,OAAjD;AAApC;AACH;;AACD,+BAAYH,KAAZ;AAAmBF,QAAAA,eAAe,EAAE,CAAC,GAAGE,KAAK,CAACF,eAAV,EAA2BG,MAAM,CAACE,OAAlC;AAApC;;AAEA,SAAKd,eAAL;AACA;AACA,+BAAYW,KAAZ;AAAmBH,QAAAA,cAAc,EAAE,IAAnC;AAAyCC,QAAAA,eAAe,EAAE,EAA1D;AAA8DF,QAAAA,YAAY,EAAE;AAA5E;;AAGJ,SAAKN,cAAL;AACI,+BAAYU,KAAZ;AAAmBD,QAAAA,KAAK,oBAAOC,KAAK,CAACD,KAAb;AAAoB,WAACC,KAAK,CAACH,cAAP,GAAwBG,KAAK,CAACJ;AAAlD,UAAxB;AAA0FC,QAAAA,cAAc,EAAE,IAA1G;AAAgHD,QAAAA,YAAY,EAAE;AAA9H;;AAEJ;AACI,aAAOI,KAAP;AA3BR;AA6BH,CA9BD;AAkCA","sourcesContent":["import {\r\n    SELECT_RESOURCE,\r\n    SELECT_SQUARE,\r\n    SELECT_PATTERN,\r\n    CLEAR_SELECTION,\r\n    PLACE_RESOURCE,\r\n    CHANGE_PHASE\r\n\r\n} from '../actions/types'\r\n\r\nconst INITIAL_SQUARE = \"empty\"; //'wheet', 'wood'..., \"a1\", \"b2\",\"c2\"...\r\n\r\n\r\nconst INITIAL_BOARD = {\r\n\r\n    11: \"BLOCK\",\r\n    12: \"wheat\",\r\n    13: INITIAL_SQUARE,\r\n    14: INITIAL_SQUARE,\r\n    21: INITIAL_SQUARE,\r\n    22: INITIAL_SQUARE,\r\n    23: INITIAL_SQUARE,\r\n    24: INITIAL_SQUARE,\r\n    31: INITIAL_SQUARE,\r\n    32: INITIAL_SQUARE,\r\n    33: INITIAL_SQUARE,\r\n    34: INITIAL_SQUARE,\r\n    41: INITIAL_SQUARE,\r\n    42: INITIAL_SQUARE,\r\n    43: INITIAL_SQUARE,\r\n    44: INITIAL_SQUARE\r\n};\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    //phase: \"RESOURCE_PHASE\",\r\n    phase: \"BUILDING_PHASE\",\r\n    selectedPawn: null,\r\n    selectedSquare: null,\r\n    selectedPattern: [],\r\n    board: INITIAL_BOARD\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case CHANGE_PHASE:\r\n            return { ...state, phase: action.payload };\r\n\r\n        case SELECT_RESOURCE:\r\n            return { ...state, selectedPawn: action.payload };\r\n\r\n        case SELECT_SQUARE:\r\n            //state.board.selectedSquare = action.payload;\r\n            return { ...state, selectedSquare: action.payload };\r\n\r\n        case SELECT_PATTERN:\r\n            if (state.selectedPattern.find(el => el === action.payload)) {\r\n                return { ...state, selectedPattern: state.selectedPattern.filter(el => el !== action.payload) };\r\n            }\r\n            return { ...state, selectedPattern: [...state.selectedPattern, action.payload] };\r\n        \r\n            case CLEAR_SELECTION:\r\n            //state.board.selectedSquare = action.payload;\r\n            return { ...state, selectedSquare: null, selectedPattern: [], selectedPawn: null };\r\n \r\n\r\n        case PLACE_RESOURCE:\r\n            return { ...state, board: { ...state.board, [state.selectedSquare]: state.selectedPawn }, selectedSquare: null, selectedPawn: null };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/"]},"metadata":{},"sourceType":"module"}