{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resources.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectResource, changePhaseTo, changePossibleAction } from '../actions';\nimport { WOOD, STONE, BRICK, WHEAT, GLASS } from './constants';\nimport { messagePlaceResource } from './messages';\n\nclass Resources extends React.Component {\n  /*\r\n  resourceSelection = resource => {\r\n      if (this.props.phase === \"RESOURCE_PHASE\") {\r\n          this.props.selectResource(resource);\r\n        }\r\n  }\r\n  */\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Select resource:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(WOOD, this.props.phase);\n        this.props.changePossibleAction(messagePlaceResource(WOOD));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Wood\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(WHEAT, this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Wheat\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(BRICK, this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Brick\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(GLASS, this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Glass\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(STONE, this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Stone\"), this.props.selectedPawn);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectResource,\n  changePhaseTo,\n  changePossibleAction\n})(Resources);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resources.js"],"names":["React","connect","selectResource","changePhaseTo","changePossibleAction","WOOD","STONE","BRICK","WHEAT","GLASS","messagePlaceResource","Resources","Component","render","props","phase","selectedPawn","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,oBAAxC,QAAoE,YAApE;AACA,SACIC,IADJ,EAEIC,KAFJ,EAGIC,KAHJ,EAIIC,KAJJ,EAKIC,KALJ,QAMO,aANP;AAOA,SAAUC,oBAAV,QAAsC,YAAtC;;AAGA,MAAMC,SAAN,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;AACpC;;;;;;;AASAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKC,KAAL,CAAWZ,cAAX,CAA0BG,IAA1B,EAAgC,KAAKS,KAAL,CAAWC,KAA3C;AACrB,aAAKD,KAAL,CAAWV,oBAAX,CAAgCM,oBAAoB,CAACL,IAAD,CAApD;AAA8D,OADlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKS,KAAL,CAAWZ,cAAX,CAA0BM,KAA1B,EAAiC,KAAKM,KAAL,CAAWC,KAA5C;AAAoD,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWZ,cAAX,CAA0BK,KAA1B,EAAiC,KAAKO,KAAL,CAAWC,KAA5C;AAAoD,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWZ,cAAX,CAA0BO,KAA1B,EAAiC,KAAKK,KAAL,CAAWC,KAA5C;AAAoD,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAOI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWZ,cAAX,CAA0BI,KAA1B,EAAiC,KAAKQ,KAAL,CAAWC,KAA5C;AAAoD,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,EAQK,KAAKD,KAAL,CAAWE,YARhB,CADJ;AAYH;;AAvBmC;;AA0BxC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,YAAY,EAAEE,KAAK,CAACF,YADjB;AAEHD,IAAAA,KAAK,EAAEG,KAAK,CAACH;AAFV,GAAP;AAIH,CALD;;AAOA,eAAed,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,cAAF;AAAkBC,EAAAA,aAAlB;AAAiCC,EAAAA;AAAjC,CAAlB,CAAP,CAAkFO,SAAlF,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectResource, changePhaseTo, changePossibleAction } from '../actions';\r\nimport {\r\n    WOOD,\r\n    STONE,\r\n    BRICK,\r\n    WHEAT,\r\n    GLASS,\r\n} from './constants';\r\nimport  { messagePlaceResource } from './messages';\r\n\r\n\r\nclass Resources extends React.Component {\r\n    /*\r\n    resourceSelection = resource => {\r\n        if (this.props.phase === \"RESOURCE_PHASE\") {\r\n            this.props.selectResource(resource);\r\n\r\n        }\r\n    }\r\n    */\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Select resource:\r\n                <button onClick={() => { this.props.selectResource(WOOD, this.props.phase); \r\n                    this.props.changePossibleAction(messagePlaceResource(WOOD) ) }}>Wood</button>\r\n                <button onClick={() => { this.props.selectResource(WHEAT, this.props.phase) }}>Wheat</button>\r\n                <button onClick={() => { this.props.selectResource(BRICK, this.props.phase) }}>Brick</button>\r\n                <button onClick={() => { this.props.selectResource(GLASS, this.props.phase) }}>Glass</button>\r\n                <button onClick={() => { this.props.selectResource(STONE, this.props.phase) }}>Stone</button>\r\n                {this.props.selectedPawn}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectResource, changePhaseTo, changePossibleAction })(Resources);\r\n"]},"metadata":{},"sourceType":"module"}