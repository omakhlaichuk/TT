{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\PatternDetector.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; //import { selectResource, changePhaseTo, placeResource, clearSelection } from '../actions';\n\nconst PatternDetector = ({\n  selectedPattern,\n  board\n}) => {\n  const showPattern = () => {\n    const preparedPattern = [];\n    selectedPattern.forEach(cell => {\n      preparedPattern.push({\n        x: cell.toString().charAt(0),\n        y: cell.toString().charAt(1),\n        resource: board[cell]\n      });\n    });\n    const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\n    const dy = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\n    const movedPattern = [];\n    preparedPattern.forEach(cell => {\n      movedPattern.push({\n        x: preparedPattern.x - dx,\n        y: preparedPattern.y - dy,\n        resource: preparedPattern.resource\n      });\n    });\n    console.log(preparedPattern);\n    /* const preparedPattern = arr => {\r\n         const rez = [];\r\n         arr.forEach(element => {\r\n             rez.push( {\r\n                x: element.toString().charAt(0),\r\n                y: element.toString().charAt(1),\r\n                resource: board[element]\r\n             });\r\n         });\r\n         return rez;\r\n     }*/\n    //const PP = preparedPattern(selectedPattern);\n    // console.log(PP);\n    /// console.log(PP.map(a => Number(a.x)));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => showPattern(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Show Pattern\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedPattern: state.selectedPattern,\n    board: state.board\n  };\n};\n\nexport default connect(mapStateToProps, {})(PatternDetector);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\PatternDetector.js"],"names":["React","connect","PatternDetector","selectedPattern","board","showPattern","preparedPattern","forEach","cell","push","x","toString","charAt","y","resource","dx","Math","min","map","Number","dy","movedPattern","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AACpD,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,eAAe,GAAG,EAAxB;AAEAH,IAAAA,eAAe,CAACI,OAAhB,CAAwBC,IAAI,IAAI;AAC5BF,MAAAA,eAAe,CAACG,IAAhB,CAAsB;AACnBC,QAAAA,CAAC,EAAEF,IAAI,CAACG,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CADgB;AAEnBC,QAAAA,CAAC,EAAEL,IAAI,CAACG,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CAFgB;AAGnBE,QAAAA,QAAQ,EAAEV,KAAK,CAACI,IAAD;AAHI,OAAtB;AAKH,KAND;AAQA,UAAMO,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGX,eAAe,CAACY,GAAhB,CAAoBV,IAAI,IAAIW,MAAM,CAACX,IAAI,CAACE,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AACA,UAAMU,EAAE,GAAGJ,IAAI,CAACC,GAAL,CAAS,GAAGX,eAAe,CAACY,GAAhB,CAAoBV,IAAI,IAAIW,MAAM,CAACX,IAAI,CAACE,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AAEA,UAAMW,YAAY,GAAG,EAArB;AACAf,IAAAA,eAAe,CAACC,OAAhB,CAAwBC,IAAI,IAAI;AAC5Ba,MAAAA,YAAY,CAACZ,IAAb,CAAkB;AACdC,QAAAA,CAAC,EAAEJ,eAAe,CAACI,CAAhB,GAAoBK,EADT;AAEdF,QAAAA,CAAC,EAAEP,eAAe,CAACO,CAAhB,GAAoBO,EAFT;AAGdN,QAAAA,QAAQ,EAAER,eAAe,CAACQ;AAHZ,OAAlB;AAMH,KAPD;AASAQ,IAAAA,OAAO,CAACC,GAAR,CAAYjB,eAAZ;AAGD;;;;;;;;;;;AAYC;AACD;AACA;AAIF,GA7CD;;AAgDA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMD,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH,CAtDD;;AAwDA,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHtB,IAAAA,eAAe,EAAEsB,KAAK,CAACtB,eADpB;AAEHC,IAAAA,KAAK,EAAEqB,KAAK,CAACrB;AAFV,GAAP;AAKH,CAND;;AAQA,eAAeH,OAAO,CAACuB,eAAD,EAAkB,EAAlB,CAAP,CAA6BtB,eAA7B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//import { selectResource, changePhaseTo, placeResource, clearSelection } from '../actions';\r\n\r\nconst PatternDetector = ({ selectedPattern, board }) => {\r\n    const showPattern = () => {\r\n        const preparedPattern = [];\r\n\r\n        selectedPattern.forEach(cell => {\r\n            preparedPattern.push( {\r\n               x: cell.toString().charAt(0),\r\n               y: cell.toString().charAt(1),\r\n               resource: board[cell]\r\n            });\r\n        });\r\n\r\n        const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\r\n        const dy = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\r\n\r\n        const movedPattern = [];\r\n        preparedPattern.forEach(cell => {\r\n            movedPattern.push({\r\n                x: preparedPattern.x - dx,\r\n                y: preparedPattern.y - dy,\r\n                resource: preparedPattern.resource\r\n\r\n            })\r\n        });\r\n\r\n        console.log(preparedPattern);\r\n\r\n\r\n       /* const preparedPattern = arr => {\r\n            const rez = [];\r\n            arr.forEach(element => {\r\n                rez.push( {\r\n                   x: element.toString().charAt(0),\r\n                   y: element.toString().charAt(1),\r\n                   resource: board[element]\r\n                });\r\n            });\r\n            return rez;\r\n        }*/\r\n\r\n        //const PP = preparedPattern(selectedPattern);\r\n       // console.log(PP);\r\n       /// console.log(PP.map(a => Number(a.x)));\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => showPattern()}>Show Pattern</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedPattern: state.selectedPattern,\r\n        board: state.board\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PatternDetector);\r\n"]},"metadata":{},"sourceType":"module"}