{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Square.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; //import Grid from './Grid';\n\nimport '../css/square.css';\nimport { selectSquare, selectPattern } from './../actions';\n\nclass Square extends React.Component {\n  onCellClick(phase) {\n    const filling = this.props.cell;\n\n    if (this.props.phase === 'RESOURCE_PHASE') {\n      if (filling === \"empty\") {\n        this.props.selectSquare(this.props.index);\n      } else {\n        this.props.selectSquare(null);\n      }\n    } else if (this.props.phase === 'BUILDING_PHASE') {\n      if (this.props.selectedPawn === null && (filling === \"stone\" || filling === \"brick\" || filling === \"wheat\" || filling === \"glass\" || filling === \"wood\")) {\n        this.props.selectPattern(this.props.index);\n      }\n    }\n  }\n\n  render() {\n    let cellCalss = \"cell\";\n\n    if (this.props.selectedSquare === this.props.index) {\n      cellCalss += \" selectedCell\";\n    }\n\n    if (this.props.selectedPattern.find(el => el === this.props.index)) {\n      cellCalss += \" patternedCell\";\n    }\n\n    console.log(this.props.selectedPattern.find(el => el === this.props.index));\n    return React.createElement(\"div\", {\n      className: cellCalss,\n      onClick: () => {\n        this.onCellClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.cell);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cell: state.board[ownProps.index],\n    selectedSquare: state.selectedSquare,\n    selectedPattern: state.selectedPattern,\n    selectedPawn: state.selectedPawn,\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectSquare,\n  selectPattern\n})(Square);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Square.js"],"names":["React","connect","selectSquare","selectPattern","Square","Component","onCellClick","phase","filling","props","cell","index","selectedPawn","render","cellCalss","selectedSquare","selectedPattern","find","el","console","log","mapStateToProps","state","ownProps","board"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAO,mBAAP;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,cAA5C;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,IAA3B;;AAEA,QAAI,KAAKD,KAAL,CAAWF,KAAX,KAAqB,gBAAzB,EAA2C;AACvC,UAAIC,OAAO,KAAK,OAAhB,EAAyB;AACrB,aAAKC,KAAL,CAAWP,YAAX,CAAwB,KAAKO,KAAL,CAAWE,KAAnC;AACH,OAFD,MAEO;AAAE,aAAKF,KAAL,CAAWP,YAAX,CAAwB,IAAxB;AAA+B;AAC3C,KAJD,MAIQ,IAAI,KAAKO,KAAL,CAAWF,KAAX,KAAqB,gBAAzB,EAA2C;AAC/C,UAAI,KAAKE,KAAL,CAAWG,YAAX,KAA4B,IAA5B,KAAqCJ,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,OAAnC,IAA6CA,OAAO,KAAK,OAAzD,IAAoEA,OAAO,KAAK,OAAhF,IAA2FA,OAAO,KAAK,MAA5I,CAAJ,EAA0J;AACtJ,aAAKC,KAAL,CAAWN,aAAX,CAAyB,KAAKM,KAAL,CAAWE,KAApC;AAEH;AACJ;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,MAAhB;;AACA,QAAI,KAAKL,KAAL,CAAWM,cAAX,KAA8B,KAAKN,KAAL,CAAWE,KAA7C,EAAoD;AAAEG,MAAAA,SAAS,IAAI,eAAb;AAA+B;;AACrF,QAAK,KAAKL,KAAL,CAAWO,eAAX,CAA2BC,IAA3B,CAAgCC,EAAE,IAAIA,EAAE,KAAK,KAAKT,KAAL,CAAWE,KAAxD,CAAL,EAAqE;AAAEG,MAAAA,SAAS,IAAE,gBAAX;AAA6B;;AACpGK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWO,eAAX,CAA2BC,IAA3B,CAAgCC,EAAE,IAAIA,EAAE,KAAK,KAAKT,KAAL,CAAWE,KAAxD,CAAZ;AAEA,WACI;AAAK,MAAA,SAAS,EAAEG,SAAhB;AAA2B,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKR,WAAL;AAAoB,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKG,KAAL,CAAWC,IADhB,CADJ;AAKH;;AA5BgC;;AA+BrC,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHb,IAAAA,IAAI,EAAEY,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACZ,KAArB,CADH;AAEHI,IAAAA,cAAc,EAAEO,KAAK,CAACP,cAFnB;AAGHC,IAAAA,eAAe,EAAEM,KAAK,CAACN,eAHpB;AAIHJ,IAAAA,YAAY,EAAEU,KAAK,CAACV,YAJjB;AAKHL,IAAAA,KAAK,EAAEe,KAAK,CAACf;AALV,GAAP;AAOH,CARD;;AAUA,eAAeN,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAA0DC,MAA1D,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//import Grid from './Grid';\r\nimport '../css/square.css';\r\nimport { selectSquare, selectPattern } from './../actions';\r\n\r\nclass Square extends React.Component {\r\n\r\n    onCellClick(phase) {\r\n        const filling = this.props.cell;\r\n\r\n        if (this.props.phase === 'RESOURCE_PHASE') {\r\n            if (filling === \"empty\") {\r\n                this.props.selectSquare(this.props.index);\r\n            } else { this.props.selectSquare(null) }\r\n        }  else if (this.props.phase === 'BUILDING_PHASE') {\r\n            if (this.props.selectedPawn === null && (filling === \"stone\" || filling === \"brick\"|| filling === \"wheat\" || filling === \"glass\" || filling === \"wood\" )) {\r\n                this.props.selectPattern(this.props.index);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let cellCalss = \"cell\";\r\n        if (this.props.selectedSquare === this.props.index) { cellCalss += \" selectedCell\"; }\r\n        if ( this.props.selectedPattern.find(el => el === this.props.index)) { cellCalss+=\" patternedCell\" }\r\n        console.log(this.props.selectedPattern.find(el => el === this.props.index));\r\n\r\n        return (\r\n            <div className={cellCalss} onClick={() => { this.onCellClick() }}>\r\n                {this.props.cell}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        cell: state.board[ownProps.index],\r\n        selectedSquare: state.selectedSquare,\r\n        selectedPattern: state.selectedPattern,\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSquare, selectPattern })(Square);\r\n\r\n"]},"metadata":{},"sourceType":"module"}