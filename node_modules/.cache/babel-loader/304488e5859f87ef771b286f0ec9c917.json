{"ast":null,"code":"import _objectSpread from \"D:\\\\Pro\\\\React\\\\tlt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { SELECT_RESOURCE, PLACE_RESOURCE, CHANGE_OF_PHASE_TO, CHANGE_PLAYER_TO } from '../actions/types';\nconst INITIAL_STATE = {\n  phase: \"RESOURCE_PHASE\",\n  selectedPawn: null\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CHANGE_OF_PHASE_TO:\n      return _objectSpread({}, state, {\n        phase: action.payload\n      });\n\n    case CHANGE_PLAYER_TO:\n      return _objectSpread({}, state, {\n        firstPlayer: action.payload\n      });\n\n    case SELECT_RESOURCE:\n      return _objectSpread({}, state, {\n        selectedResource: action.payload\n      });\n\n    case PLACE_RESOURCE:\n      return _objectSpread({}, state, {\n        selectedResource: null\n      });\n\n    default:\n      return state;\n  }\n});\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\reducers\\index.js"],"names":["SELECT_RESOURCE","PLACE_RESOURCE","CHANGE_OF_PHASE_TO","CHANGE_PLAYER_TO","INITIAL_STATE","phase","selectedPawn","state","action","type","payload","firstPlayer","selectedResource"],"mappings":";AAAA,SACIA,eADJ,EAEIC,cAFJ,EAGIC,kBAHJ,EAIIC,gBAJJ,QAKO,kBALP;AAQA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,gBADW;AAElBC,EAAAA,YAAY,EAAE;AAFI,CAAtB;AAMA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,kBAAL;AACI,+BAAYK,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAjC;;AACJ,SAAKP,gBAAL;AACI,+BAAYI,KAAZ;AAAmBI,QAAAA,WAAW,EAAEH,MAAM,CAACE;AAAvC;;AACJ,SAAKV,eAAL;AACI,+BAAYO,KAAZ;AAAmBK,QAAAA,gBAAgB,EAAEJ,MAAM,CAACE;AAA5C;;AACJ,SAAKT,cAAL;AACI,+BAAYM,KAAZ;AAAmBK,QAAAA,gBAAgB,EAAE;AAArC;;AACJ;AACI,aAAOL,KAAP;AAVR;AAYH,CAbD;AAiBA","sourcesContent":["import {\r\n    SELECT_RESOURCE,\r\n    PLACE_RESOURCE,\r\n    CHANGE_OF_PHASE_TO,\r\n    CHANGE_PLAYER_TO\r\n} from '../actions/types'\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    phase: \"RESOURCE_PHASE\",\r\n    selectedPawn: null\r\n\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_OF_PHASE_TO:\r\n            return { ...state, phase: action.payload };\r\n        case CHANGE_PLAYER_TO:\r\n            return { ...state, firstPlayer: action.payload };\r\n        case SELECT_RESOURCE:\r\n            return { ...state, selectedResource: action.payload };\r\n        case PLACE_RESOURCE:\r\n            return { ...state, selectedResource: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/"]},"metadata":{},"sourceType":"module"}