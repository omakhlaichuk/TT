{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Buildings\\\\Building.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchBuilding, selectPawn, changeMessage } from '../../actions';\nimport data from './buildings.json';\nimport { BUILDING_PHASE } from './../constants';\nimport { messagePlaceResource } from './../messages';\n\nclass Building extends React.Component {\n  selectBuilding() {\n    if (this.props.phase === BUILDING_PHASE) {\n      this.props.selectPawn(this.props.building.title);\n      this.props.changeMessage(messagePlaceResource());\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchBuilding(data[this.props.title]);\n  }\n\n  render() {\n    if (!this.props.building) {\n      return null;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.selectBuilding(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.building.title));\n    }\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    phase: state.phase,\n    building: state.buildings[ownProps.type]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchBuilding,\n  selectPawn,\n  changeMessage\n})(Building);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Buildings\\Building.js"],"names":["React","connect","fetchBuilding","selectPawn","changeMessage","data","BUILDING_PHASE","messagePlaceResource","Building","Component","selectBuilding","props","phase","building","title","componentDidMount","render","mapStateToProps","state","ownProps","buildings","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,aAApC,QAAyD,eAAzD;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAAUC,oBAAV,QAAsC,eAAtC;;AAIA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAEnCC,EAAAA,cAAc,GAAG;AACb,QAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqBN,cAAzB,EAAyC;AACrC,WAAKK,KAAL,CAAWR,UAAX,CAAsB,KAAKQ,KAAL,CAAWE,QAAX,CAAoBC,KAA1C;AACA,WAAKH,KAAL,CAAWP,aAAX,CAAyBG,oBAAoB,EAA7C;AACH;AACJ;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWT,aAAX,CAAyBG,IAAI,CAAC,KAAKM,KAAL,CAAWG,KAAZ,CAA7B;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKL,KAAL,CAAWE,QAAhB,EAA0B;AACtB,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKH,cAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+C,KAAKC,KAAL,CAAWE,QAAX,CAAoBC,KAAnE,CADJ,CADJ;AAKH;AACJ;;AAvBkC;;AAyBtC;;AAED,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHP,IAAAA,KAAK,EAAEM,KAAK,CAACN,KADV;AAEHC,IAAAA,QAAQ,EAAEK,KAAK,CAACE,SAAN,CAAgBD,QAAQ,CAACE,IAAzB;AAFP,GAAP;AAIH,CALD;;AAOA,eAAepB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,aAAF;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA;AAA7B,CAAlB,CAAP,CAAuEI,QAAvE,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchBuilding, selectPawn, changeMessage } from '../../actions';\r\nimport data from './buildings.json';\r\nimport { BUILDING_PHASE } from './../constants';\r\nimport  { messagePlaceResource } from './../messages';\r\n\r\n\r\n\r\nclass Building extends React.Component {\r\n\r\n    selectBuilding() {\r\n        if (this.props.phase === BUILDING_PHASE) {\r\n            this.props.selectPawn(this.props.building.title);\r\n            this.props.changeMessage(messagePlaceResource());\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBuilding(data[this.props.title]);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.building) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <button onClick={() => this.selectBuilding()}>{this.props.building.title}</button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        phase: state.phase,\r\n        building: state.buildings[ownProps.type]\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBuilding, selectPawn, changeMessage })(Building);\r\n"]},"metadata":{},"sourceType":"module"}