{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resources.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectPawn, changePhaseTo, changeMessage } from '../actions';\nimport { RESOURCE_PHASE, WOOD, STONE, BRICK, WHEAT, GLASS } from './constants';\nimport { messagePlaceResource } from './messages';\n\nclass Resources extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resourceSelection = resource => {\n      if (this.props.phase === RESOURCE_PHASE) {\n        this.props.selectPawn(resource);\n        changeMessage(messagePlaceResource(resource));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Select resource:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(WOOD);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Wood\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(WHEAT);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Wheat\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(BRICK);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Brick\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(GLASS);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Glass\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(STONE);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Stone\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectPawn,\n  changePhaseTo,\n  changeMessage\n})(Resources);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resources.js"],"names":["React","connect","selectPawn","changePhaseTo","changeMessage","RESOURCE_PHASE","WOOD","STONE","BRICK","WHEAT","GLASS","messagePlaceResource","Resources","Component","resourceSelection","resource","props","phase","render","mapStateToProps","state","selectedPawn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,QAAyD,YAAzD;AACA,SACIC,cADJ,EAEIC,IAFJ,EAGIC,KAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,KANJ,QAOO,aAPP;AAQA,SAAUC,oBAAV,QAAsC,YAAtC;;AAGA,MAAMC,SAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEpCC,iBAFoC,GAEhBC,QAAQ,IAAI;AAC5B,UAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqBZ,cAAzB,EAAyC;AACrC,aAAKW,KAAL,CAAWd,UAAX,CAAsBa,QAAtB;AACAX,QAAAA,aAAa,CAACO,oBAAoB,CAACI,QAAD,CAArB,CAAb;AACH;AACJ,KAPmC;AAAA;;AAUpCG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKJ,iBAAL,CAAuBR,IAAvB;AAA8B,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKQ,iBAAL,CAAuBL,KAAvB;AAA+B,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKK,iBAAL,CAAuBN,KAAvB;AAA+B,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKM,iBAAL,CAAuBJ,KAAvB;AAA+B,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKI,iBAAL,CAAuBP,KAAvB;AAA+B,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CADJ;AAUH;;AArBmC;;AAwBxC,MAAMY,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACC,YADjB;AAEHJ,IAAAA,KAAK,EAAEG,KAAK,CAACH;AAFV,GAAP;AAIH,CALD;;AAOA,eAAehB,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA;AAA7B,CAAlB,CAAP,CAAuEQ,SAAvE,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectPawn, changePhaseTo, changeMessage } from '../actions';\r\nimport {\r\n    RESOURCE_PHASE,\r\n    WOOD,\r\n    STONE,\r\n    BRICK,\r\n    WHEAT,\r\n    GLASS,\r\n} from './constants';\r\nimport  { messagePlaceResource } from './messages';\r\n\r\n\r\nclass Resources extends React.Component {\r\n    \r\n    resourceSelection = resource => {\r\n        if (this.props.phase === RESOURCE_PHASE) {\r\n            this.props.selectPawn(resource);\r\n            changeMessage(messagePlaceResource(resource));\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Select resource:\r\n                <button onClick={() => { this.resourceSelection(WOOD) }}>Wood</button>\r\n                <button onClick={() => { this.resourceSelection(WHEAT) }}>Wheat</button>\r\n                <button onClick={() => { this.resourceSelection(BRICK) }}>Brick</button>\r\n                <button onClick={() => { this.resourceSelection(GLASS) }}>Glass</button>\r\n                <button onClick={() => { this.resourceSelection(STONE) }}>Stone</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectPawn, changePhaseTo, changeMessage })(Resources);\r\n"]},"metadata":{},"sourceType":"module"}