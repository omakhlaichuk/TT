{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resources.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectResource, changePhaseTo, changePlayerTo } from '../actions';\n\nclass Resources extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resourceSelection = resource => {\n      if (this.props.phase === \"RESOURCE_PHASE\") {\n        this.props.selectResource(resource);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Select resource:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Wood\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Wood\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Wheat\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Wheat\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Brick\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Brick\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Glass\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Glass\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Stone\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Stone\"), \"Selected:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.resourcePlacing();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.selectedPawn));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectResource,\n  changePhaseTo,\n  changePlayerTo\n})(Resources);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resources.js"],"names":["React","connect","selectResource","changePhaseTo","changePlayerTo","Resources","Component","resourceSelection","resource","props","phase","render","resourcePlacing","selectedPawn","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,cAAxC,QAA8D,YAA9D;;AAGA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAGpCC,iBAHoC,GAGhBC,QAAQ,IAAI;AAC5B,UAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqB,gBAAzB,EAA2C;AACvC,aAAKD,KAAL,CAAWP,cAAX,CAA0BM,QAA1B;AAEH;AACJ,KARmC;AAAA;;AAUpCG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKJ,iBAAL,CAAuB,MAAvB;AAAgC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,eAQI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKK,eAAL;AAAwB,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWI,YADhB,CARJ,CADJ;AAcH;;AAzBmC;;AA4BxC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,YAAY,EAAEE,KAAK,CAACF,YADjB;AAEHH,IAAAA,KAAK,EAAEK,KAAK,CAACL;AAFV,GAAP;AAIH,CALD;;AAOA,eAAeT,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA,cAAF;AAAkBC,EAAAA,aAAlB;AAAiCC,EAAAA;AAAjC,CAAlB,CAAP,CAA4EC,SAA5E,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectResource, changePhaseTo, changePlayerTo } from '../actions';\r\n\r\n\r\nclass Resources extends React.Component {\r\n    //During PHASE_CHOOSING_RESOURCE If you the first player you can select one of 5 resources\r\n    //if you are the second - get random resource.\r\n    resourceSelection = resource => {\r\n        if (this.props.phase === \"RESOURCE_PHASE\") {\r\n            this.props.selectResource(resource);\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Select resource:\r\n                <button onClick={() => { this.resourceSelection(\"Wood\") }}>Wood</button>\r\n                <button onClick={() => { this.resourceSelection(\"Wheat\") }}>Wheat</button>\r\n                <button onClick={() => { this.resourceSelection(\"Brick\") }}>Brick</button>\r\n                <button onClick={() => { this.resourceSelection(\"Glass\") }}>Glass</button>\r\n                <button onClick={() => { this.resourceSelection(\"Stone\") }}>Stone</button>\r\n                Selected:\r\n                <button onClick={() => { this.resourcePlacing() }}>\r\n                    {this.props.selectedPawn}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectResource, changePhaseTo, changePlayerTo })(Resources);\r\n"]},"metadata":{},"sourceType":"module"}