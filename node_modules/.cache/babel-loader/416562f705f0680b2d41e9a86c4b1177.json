{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resources.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectPawn, changePhaseTo, changeMessage } from '../actions';\nimport { message, RESOURCE_PHASE } from './constants';\n\nclass Resources extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resourceSelection = resource => {\n      if (this.props.phase === RESOURCE_PHASE) {\n        this.props.selectPawn(resource);\n        this.props.changeMessage(message.placeResource(resource.title));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(this.props.resource);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.resource.title));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase,\n    resource: state.resources[ownProps.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectPawn,\n  changePhaseTo,\n  changeMessage\n})(Resources);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resources.js"],"names":["React","connect","selectPawn","changePhaseTo","changeMessage","message","RESOURCE_PHASE","Resources","Component","resourceSelection","resource","props","phase","placeResource","title","render","mapStateToProps","state","ownProps","selectedPawn","resources","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,QAAyD,YAAzD;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,aAAxC;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEpCC,iBAFoC,GAEhBC,QAAQ,IAAI;AAC5B,UAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqBN,cAAzB,EAAyC;AACrC,aAAKK,KAAL,CAAWT,UAAX,CAAsBQ,QAAtB;AACA,aAAKC,KAAL,CAAWP,aAAX,CAAyBC,OAAO,CAACQ,aAAR,CAAsBH,QAAQ,CAACI,KAA/B,CAAzB;AACH;AACJ,KAPmC;AAAA;;AASpCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKN,iBAAL,CAAuB,KAAKE,KAAL,CAAWD,QAAlC;AAA6C,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyE,KAAKC,KAAL,CAAWD,QAAX,CAAoBI,KAA7F,CADJ,CADJ;AAKH;;AAfmC;;AAkBxC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHC,IAAAA,YAAY,EAAEF,KAAK,CAACE,YADjB;AAEHP,IAAAA,KAAK,EAAEK,KAAK,CAACL,KAFV;AAGHF,IAAAA,QAAQ,EAAEO,KAAK,CAACG,SAAN,CAAgBF,QAAQ,CAACG,EAAzB;AAHP,GAAP;AAKH,CAND;;AAQA,eAAepB,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA;AAA7B,CAAlB,CAAP,CAAuEG,SAAvE,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectPawn, changePhaseTo, changeMessage } from '../actions';\r\nimport { message, RESOURCE_PHASE } from './constants';\r\n\r\nclass Resources extends React.Component {\r\n\r\n    resourceSelection = resource => {\r\n        if (this.props.phase === RESOURCE_PHASE) {\r\n            this.props.selectPawn(resource);\r\n            this.props.changeMessage(message.placeResource(resource.title));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={() => { this.resourceSelection(this.props.resource) }}>{this.props.resource.title}</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase,\r\n        resource: state.resources[ownProps.id]\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectPawn, changePhaseTo, changeMessage })(Resources);\r\n"]},"metadata":{},"sourceType":"module"}