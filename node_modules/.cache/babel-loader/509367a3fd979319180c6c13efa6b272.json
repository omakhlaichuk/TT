{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Buildings\\\\Building.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchBuilding, selectPawn, changeMessage } from '../../actions';\nimport data from './buildings.json';\nimport { BUILDING_PHASE, SCORING_PHASE } from './../constants';\nimport { messageSelectSquareForBuilding } from './../messages';\n\nclass Building extends React.Component {\n  selectBuilding() {\n    if (this.props.phase === BUILDING_PHASE) {\n      if (this.props.selectedPattern.length && \"Pattern is OK\") {\n        this.props.selectPawn(this.props.building.title);\n      }\n\n      this.props.changeMessage(messageSelectSquareForBuilding(this.props.building.title, this.props.selectedPattern.length));\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchBuilding(data[this.props.title]);\n  }\n\n  renderScoring() {\n    if (this.props.phase === SCORING_PHASE) {\n      return \"for scoring \".concat(this.props.scoringNumber);\n    }\n  }\n\n  render() {\n    if (!this.props.building) {\n      return null;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.selectBuilding(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.building.title), this.renderScoring());\n    }\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    phase: state.phase,\n    building: state.buildings[ownProps.type],\n    selectedPattern: state.selectedPattern\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchBuilding,\n  selectPawn,\n  changeMessage\n})(Building);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Buildings\\Building.js"],"names":["React","connect","fetchBuilding","selectPawn","changeMessage","data","BUILDING_PHASE","SCORING_PHASE","messageSelectSquareForBuilding","Building","Component","selectBuilding","props","phase","selectedPattern","length","building","title","componentDidMount","renderScoring","scoringNumber","render","mapStateToProps","state","ownProps","buildings","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,aAApC,QAAyD,eAAzD;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,gBAA9C;AACA,SAASC,8BAAT,QAA+C,eAA/C;;AAIA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAEnCC,EAAAA,cAAc,GAAG;AACb,QAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqBP,cAAzB,EAAyC;AACrC,UAAI,KAAKM,KAAL,CAAWE,eAAX,CAA2BC,MAA3B,IAAsC,eAA1C,EAA2D;AACvD,aAAKH,KAAL,CAAWT,UAAX,CAAsB,KAAKS,KAAL,CAAWI,QAAX,CAAoBC,KAA1C;AAEH;;AACD,WAAKL,KAAL,CAAWR,aAAX,CAAyBI,8BAA8B,CAAC,KAAKI,KAAL,CAAWI,QAAX,CAAoBC,KAArB,EAA4B,KAAKL,KAAL,CAAWE,eAAX,CAA2BC,MAAvD,CAAvD;AACH;AACJ;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWV,aAAX,CAAyBG,IAAI,CAAC,KAAKO,KAAL,CAAWK,KAAZ,CAA7B;AACH;;AAEDE,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKP,KAAL,CAAWC,KAAX,KAAqBN,aAAzB,EAAwC;AAAC,mCAAsB,KAAKK,KAAL,CAAWQ,aAAjC;AAAiD;AAC7F;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKT,KAAL,CAAWI,QAAhB,EAA0B;AACtB,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKL,cAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+C,KAAKC,KAAL,CAAWI,QAAX,CAAoBC,KAAnE,CADJ,EAEM,KAAKE,aAAL,EAFN,CADJ;AAMH;AACJ;;AA/BkC;;AAiCtC;;AAED,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHX,IAAAA,KAAK,EAAEU,KAAK,CAACV,KADV;AAEHG,IAAAA,QAAQ,EAAEO,KAAK,CAACE,SAAN,CAAgBD,QAAQ,CAACE,IAAzB,CAFP;AAGHZ,IAAAA,eAAe,EAAES,KAAK,CAACT;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAeb,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA,aAAF;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA;AAA7B,CAAlB,CAAP,CAAuEK,QAAvE,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchBuilding, selectPawn, changeMessage } from '../../actions';\r\nimport data from './buildings.json';\r\nimport { BUILDING_PHASE, SCORING_PHASE } from './../constants';\r\nimport { messageSelectSquareForBuilding } from './../messages';\r\n\r\n\r\n\r\nclass Building extends React.Component {\r\n\r\n    selectBuilding() {\r\n        if (this.props.phase === BUILDING_PHASE) {\r\n            if (this.props.selectedPattern.length  && \"Pattern is OK\") {\r\n                this.props.selectPawn(this.props.building.title);\r\n\r\n            }\r\n            this.props.changeMessage(messageSelectSquareForBuilding(this.props.building.title, this.props.selectedPattern.length ));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBuilding(data[this.props.title]);\r\n    }\r\n\r\n    renderScoring() {\r\n        if (this.props.phase === SCORING_PHASE) {return `for scoring ${this.props.scoringNumber}`}\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.building) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <button onClick={() => this.selectBuilding()}>{this.props.building.title}</button>\r\n                    { this.renderScoring() } \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        phase: state.phase,\r\n        building: state.buildings[ownProps.type],\r\n        selectedPattern: state.selectedPattern\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBuilding, selectPawn, changeMessage })(Building);\r\n"]},"metadata":{},"sourceType":"module"}