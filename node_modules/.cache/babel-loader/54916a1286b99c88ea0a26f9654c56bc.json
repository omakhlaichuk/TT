{"ast":null,"code":"import _objectSpread from \"D:\\\\Pro\\\\React\\\\tt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Pro\\\\React\\\\tt\\\\src\\\\components\\\\Resource.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectPawn, changePhaseTo, changeMessage, clearSelection } from '../actions';\nimport { message, WILD, ALL_RESOURCES } from './constants';\nimport ResourceBtn from './ResourceBtn';\n\nclass Resource extends React.Component {\n  /*\r\n      resourceSelection = resource => {\r\n          //select resource\r\n          this.props.clearSelection();\r\n          this.props.selectPawn(resource);\r\n          this.props.changeMessage(message.placeResource(resource.title));\r\n  \r\n      }\r\n  \r\n      renderResourceBtn = resource => {\r\n          return <button\r\n              key={resource.title}\r\n              onClick={() => { this.resourceSelection(resource) }}\r\n              className={`${resource.title.toLowerCase()} resourceBtn`}\r\n          ></button>\r\n      }\r\n  */\n  render() {\n    if (!this.props.resource) {\n      return null;\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"\".concat(this.props.resource.title.toLowerCase(), \": \"), this.props.resource === WILD ? ALL_RESOURCES.map(resource => {\n      return React.createElement(ResourceBtn, {\n        key: resource.title,\n        resource: _objectSpread({}, resource, {\n          fromWild: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }); //this.renderResourceBtn({...resource, fromWild:true})\n    }) : React.createElement(ResourceBtn, {\n      resource: this.props.resource,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase,\n    resource: state.resources[ownProps.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectPawn,\n  changePhaseTo,\n  changeMessage,\n  clearSelection\n})(Resource);","map":{"version":3,"sources":["D:\\Pro\\React\\tt\\src\\components\\Resource.js"],"names":["React","connect","selectPawn","changePhaseTo","changeMessage","clearSelection","message","WILD","ALL_RESOURCES","ResourceBtn","Resource","Component","render","props","resource","title","toLowerCase","map","fromWild","mapStateToProps","state","ownProps","selectedPawn","phase","resources","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,EAAmDC,cAAnD,QAAyE,YAAzE;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,aAAxB,QAA4C,aAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACvC;;;;;;;;;;;;;;;;;AAiBIC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AAAE,aAAO,IAAP;AAAa;;AAAA;AACzC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQ,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,WAA1B,EADR,SAEK,KAAKH,KAAL,CAAWC,QAAX,KAAwBP,IAAxB,GACGC,aAAa,CAACS,GAAd,CACIH,QAAQ,IAAI;AACR,aAAQ,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,QAAQ,CAACC,KAA3B;AAAkC,QAAA,QAAQ,oBAAOD,QAAP;AAAiBI,UAAAA,QAAQ,EAAC;AAA1B,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,CADQ,CACgF;AAC3F,KAHL,CADH,GAKK,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPV,CADJ;AAaH;;AAjCkC;;AAoCvC,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHC,IAAAA,YAAY,EAAEF,KAAK,CAACE,YADjB;AAEHC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAFV;AAGHT,IAAAA,QAAQ,EAAEM,KAAK,CAACI,SAAN,CAAgBH,QAAQ,CAACI,EAAzB;AAHP,GAAP;AAKH,CAND;;AAQA,eAAexB,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,aAA7B;AAA4CC,EAAAA;AAA5C,CAAlB,CAAP,CAAuFK,QAAvF,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectPawn, changePhaseTo, changeMessage, clearSelection } from '../actions';\r\nimport { message, WILD, ALL_RESOURCES} from './constants';\r\nimport ResourceBtn from './ResourceBtn';\r\n\r\nclass Resource extends React.Component {\r\n/*\r\n    resourceSelection = resource => {\r\n        //select resource\r\n        this.props.clearSelection();\r\n        this.props.selectPawn(resource);\r\n        this.props.changeMessage(message.placeResource(resource.title));\r\n\r\n    }\r\n\r\n    renderResourceBtn = resource => {\r\n        return <button\r\n            key={resource.title}\r\n            onClick={() => { this.resourceSelection(resource) }}\r\n            className={`${resource.title.toLowerCase()} resourceBtn`}\r\n        ></button>\r\n    }\r\n*/\r\n    render() {\r\n        if (!this.props.resource) { return null };\r\n        return (\r\n            <div>\r\n                {`${this.props.resource.title.toLowerCase()}: `}\r\n                {this.props.resource === WILD ?\r\n                    ALL_RESOURCES.map(\r\n                        resource => {\r\n                            return  <ResourceBtn key={resource.title} resource={ {...resource, fromWild:true} } />; //this.renderResourceBtn({...resource, fromWild:true})\r\n                        })\r\n                    : <ResourceBtn resource={this.props.resource} />\r\n                }\r\n                {}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase,\r\n        resource: state.resources[ownProps.id]\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectPawn, changePhaseTo, changeMessage, clearSelection })(Resource);\r\n"]},"metadata":{},"sourceType":"module"}