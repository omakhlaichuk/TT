{"ast":null,"code":"const preparedPattern = pattern => {\n  const preparedPattern = pattern.map(cell => {\n    return {\n      x: cell.toString().charAt(0),\n      y: cell.toString().charAt(1),\n      resource: board[cell]\n    };\n  });\n  const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\n  const dy = Math.min(...preparedPattern.map(cell => Number(cell.y))) - 1;\n  const movedPattern = preparedPattern.map(cell => {\n    return {\n      x: cell.x - dx,\n      y: cell.y - dy,\n      resource: cell.resource\n    };\n  });\n  return movedPattern;\n};\n\nexport default preparedPattern;","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\preparePattern.js"],"names":["preparedPattern","pattern","map","cell","x","toString","charAt","y","resource","board","dx","Math","min","Number","dy","movedPattern"],"mappings":"AAAA,MAAMA,eAAe,GAAIC,OAAD,IAAa;AAEjC,QAAMD,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAI,IAAI;AACxC,WAAO;AACHC,MAAAA,CAAC,EAAED,IAAI,CAACE,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CADA;AAEHC,MAAAA,CAAC,EAAEJ,IAAI,CAACE,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CAFA;AAGHE,MAAAA,QAAQ,EAAEC,KAAK,CAACN,IAAD;AAHZ,KAAP;AAKH,GANuB,CAAxB;AAQA,QAAMO,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGZ,eAAe,CAACE,GAAhB,CAAoBC,IAAI,IAAIU,MAAM,CAACV,IAAI,CAACC,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AACA,QAAMU,EAAE,GAAGH,IAAI,CAACC,GAAL,CAAS,GAAGZ,eAAe,CAACE,GAAhB,CAAoBC,IAAI,IAAIU,MAAM,CAACV,IAAI,CAACI,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AAEA,QAAMQ,YAAY,GAAGf,eAAe,CAACE,GAAhB,CAAoBC,IAAI,IAAI;AAC7C,WAAO;AACHC,MAAAA,CAAC,EAAED,IAAI,CAACC,CAAL,GAASM,EADT;AAEHH,MAAAA,CAAC,EAAEJ,IAAI,CAACI,CAAL,GAASO,EAFT;AAGHN,MAAAA,QAAQ,EAAEL,IAAI,CAACK;AAHZ,KAAP;AAMH,GAPoB,CAArB;AASA,SAAOO,YAAP;AACH,CAvBD;;AAyBA,eAAef,eAAf","sourcesContent":["const preparedPattern = (pattern) => {\r\n       \r\n    const preparedPattern = pattern.map(cell => {\r\n        return {\r\n            x: cell.toString().charAt(0),\r\n            y: cell.toString().charAt(1),\r\n            resource: board[cell]\r\n        }\r\n    });\r\n\r\n    const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\r\n    const dy = Math.min(...preparedPattern.map(cell => Number(cell.y))) - 1;\r\n\r\n    const movedPattern = preparedPattern.map(cell => {\r\n        return {\r\n            x: cell.x - dx,\r\n            y: cell.y - dy,\r\n            resource: cell.resource\r\n\r\n        }\r\n    });\r\n\r\n    return movedPattern;\r\n}\r\n\r\nexport default preparedPattern;"]},"metadata":{},"sourceType":"module"}