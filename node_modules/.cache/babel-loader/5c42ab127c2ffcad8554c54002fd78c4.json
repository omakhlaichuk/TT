{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\PatternDetector.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; //import { selectResource, changePhaseTo, placeResource, clearSelection } from '../actions';\n\nconst PatternDetector = ({\n  selectedPattern,\n  board\n}) => {\n  const showPattern = pattern => {\n    const preparedPattern = pattern.map(cell => {\n      return {\n        x: cell.toString().charAt(0),\n        y: cell.toString().charAt(1),\n        resource: board[cell]\n      };\n    });\n    const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\n    const dy = Math.min(...preparedPattern.map(cell => Number(cell.y))) - 1;\n    const movedPattern = preparedPattern.map(cell => {\n      return {\n        x: cell.x - dx,\n        y: cell.y - dy,\n        resource: cell.resource\n      };\n    });\n    console.log(movedPattern);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => showPattern(selectedPattern),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Show Pattern\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedPattern: state.selectedPattern,\n    board: state.board\n  };\n};\n\nexport default connect(mapStateToProps, {})(PatternDetector);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\PatternDetector.js"],"names":["React","connect","PatternDetector","selectedPattern","board","showPattern","pattern","preparedPattern","map","cell","x","toString","charAt","y","resource","dx","Math","min","Number","dy","movedPattern","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AACpD,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAE7B,UAAMC,eAAe,GAAGD,OAAO,CAACE,GAAR,CAAYC,IAAI,IAAI;AACxC,aAAO;AACHC,QAAAA,CAAC,EAAED,IAAI,CAACE,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CADA;AAEHC,QAAAA,CAAC,EAAEJ,IAAI,CAACE,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CAFA;AAGHE,QAAAA,QAAQ,EAAEV,KAAK,CAACK,IAAD;AAHZ,OAAP;AAKH,KANuB,CAAxB;AAQA,UAAMM,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGV,eAAe,CAACC,GAAhB,CAAoBC,IAAI,IAAIS,MAAM,CAACT,IAAI,CAACC,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AACA,UAAMS,EAAE,GAAGH,IAAI,CAACC,GAAL,CAAS,GAAGV,eAAe,CAACC,GAAhB,CAAoBC,IAAI,IAAIS,MAAM,CAACT,IAAI,CAACI,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AAEA,UAAMO,YAAY,GAAGb,eAAe,CAACC,GAAhB,CAAoBC,IAAI,IAAI;AAC7C,aAAO;AACHC,QAAAA,CAAC,EAAED,IAAI,CAACC,CAAL,GAASK,EADT;AAEHF,QAAAA,CAAC,EAAEJ,IAAI,CAACI,CAAL,GAASM,EAFT;AAGHL,QAAAA,QAAQ,EAAEL,IAAI,CAACK;AAHZ,OAAP;AAMH,KAPoB,CAArB;AASAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACH,GAvBD;;AA0BA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMf,WAAW,CAACF,eAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH,CAhCD;;AAkCA,MAAMoB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHrB,IAAAA,eAAe,EAAEqB,KAAK,CAACrB,eADpB;AAEHC,IAAAA,KAAK,EAAEoB,KAAK,CAACpB;AAFV,GAAP;AAKH,CAND;;AAQA,eAAeH,OAAO,CAACsB,eAAD,EAAkB,EAAlB,CAAP,CAA6BrB,eAA7B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//import { selectResource, changePhaseTo, placeResource, clearSelection } from '../actions';\r\n\r\nconst PatternDetector = ({ selectedPattern, board }) => {\r\n    const showPattern = (pattern) => {\r\n       \r\n        const preparedPattern = pattern.map(cell => {\r\n            return {\r\n                x: cell.toString().charAt(0),\r\n                y: cell.toString().charAt(1),\r\n                resource: board[cell]\r\n            }\r\n        });\r\n\r\n        const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\r\n        const dy = Math.min(...preparedPattern.map(cell => Number(cell.y))) - 1;\r\n\r\n        const movedPattern = preparedPattern.map(cell => {\r\n            return {\r\n                x: cell.x - dx,\r\n                y: cell.y - dy,\r\n                resource: cell.resource\r\n\r\n            }\r\n        });\r\n\r\n        console.log(movedPattern);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => showPattern(selectedPattern)}>Show Pattern</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedPattern: state.selectedPattern,\r\n        board: state.board\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PatternDetector);\r\n"]},"metadata":{},"sourceType":"module"}