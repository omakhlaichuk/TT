{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resources.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { selectResource } from '../actions';\n\nclass Resources extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resourceSelection = resource => {\n      this.props.selectResource(resource);\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Select resource:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Wood\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Wood\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Wheat\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Wheat\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Brick\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Brick\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Glass\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Glass\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Stone\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Stone\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"?\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"?\"), \"Selected: \", this.props.selected.selectedMaterial);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selected: state.selected\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectResource\n})(Resources);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resources.js"],"names":["React","useEffect","connect","selectResource","Resources","Component","resourceSelection","resource","props","render","console","log","selected","selectedMaterial","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT,QAA+B,YAA/B;;AAGA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SACpCC,iBADoC,GAChBC,QAAQ,IAAI;AAC5B,WAAKC,KAAL,CAAWL,cAAX,CAA0BI,QAA1B;AACH,KAHmC;AAAA;;AAKpCE,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKF,iBAAL,CAAuB,MAAvB;AAAgC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAOI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,GAAvB;AAA6B,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPJ,gBAQe,KAAKE,KAAL,CAAWI,QAAX,CAAoBC,gBARnC,CADJ;AAaH;;AApBmC;;AAuBxC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,QAAQ,EAAEG,KAAK,CAACH;AADb,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectResource } from '../actions';\r\n\r\n\r\nclass Resources extends React.Component {\r\n    resourceSelection = resource => {\r\n        this.props.selectResource(resource);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n                Select resource:\r\n                <button onClick={() => { this.resourceSelection(\"Wood\") }}>Wood</button>\r\n                <button onClick={() => { this.resourceSelection(\"Wheat\") }}>Wheat</button>\r\n                <button onClick={() => { this.resourceSelection(\"Brick\") }}>Brick</button>\r\n                <button onClick={() => { this.resourceSelection(\"Glass\") }}>Glass</button>\r\n                <button onClick={() => { this.resourceSelection(\"Stone\") }}>Stone</button>\r\n                <button onClick={() => { this.resourceSelection(\"?\") }}>?</button>\r\n                Selected: {this.props.selected.selectedMaterial}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.selected\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectResource })(Resources);\r\n"]},"metadata":{},"sourceType":"module"}