{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resource.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectPawn, changePhaseTo, changeMessage, selectPattern } from '../actions';\nimport { message, RESOURCE_PHASE } from './constants';\n\nclass Resource extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resourceSelection = resource => {\n      //  if (this.props.phase === RESOURCE_PHASE) {\n      this.props.selectPawn(resource);\n      this.props.selectPattern([]);\n      this.props.changeMessage(message.placeResource(resource.title)); // }\n    };\n  }\n\n  render() {\n    if (!this.props.resource) {\n      return null;\n    }\n\n    ; //disabled = {this.props.phase !== RESOURCE_PHASE}\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(this.props.resource);\n      },\n      className: \"\".concat(this.props.resource.title.toLowerCase(), \" resourceBtn\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), this.props.resource.title.toLowerCase());\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase,\n    resource: state.resources[ownProps.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectPawn,\n  changePhaseTo,\n  changeMessage,\n  selectPattern\n})(Resource);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resource.js"],"names":["React","connect","selectPawn","changePhaseTo","changeMessage","selectPattern","message","RESOURCE_PHASE","Resource","Component","resourceSelection","resource","props","placeResource","title","render","toLowerCase","mapStateToProps","state","ownProps","selectedPawn","phase","resources","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,EAAmDC,aAAnD,QAAwE,YAAxE;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,aAAxC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAEnCC,iBAFmC,GAEfC,QAAQ,IAAI;AAC9B;AACM,WAAKC,KAAL,CAAWV,UAAX,CAAsBS,QAAtB;AACA,WAAKC,KAAL,CAAWP,aAAX,CAAyB,EAAzB;AACA,WAAKO,KAAL,CAAWR,aAAX,CAAyBE,OAAO,CAACO,aAAR,CAAsBF,QAAQ,CAACG,KAA/B,CAAzB,EAJwB,CAK7B;AACF,KARkC;AAAA;;AAUnCC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKH,KAAL,CAAWD,QAAhB,EAA0B;AAAE,aAAO,IAAP;AAAa;;AAAA,KADpC,CAEL;;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,iBAAL,CAAuB,KAAKE,KAAL,CAAWD,QAAlC;AAA6C,OADlE;AAEI,MAAA,SAAS,YAAO,KAAKC,KAAL,CAAWD,QAAX,CAAoBG,KAApB,CAA0BE,WAA1B,EAAP,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKK,KAAKJ,KAAL,CAAWD,QAAX,CAAoBG,KAApB,CAA0BE,WAA1B,EALL,CADJ;AASH;;AAvBkC;;AA0BvC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHC,IAAAA,YAAY,EAAEF,KAAK,CAACE,YADjB;AAEHC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAFV;AAGHV,IAAAA,QAAQ,EAAEO,KAAK,CAACI,SAAN,CAAgBH,QAAQ,CAACI,EAAzB;AAHP,GAAP;AAKH,CAND;;AAQA,eAAetB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,aAA7B;AAA4CC,EAAAA;AAA5C,CAAlB,CAAP,CAAsFG,QAAtF,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectPawn, changePhaseTo, changeMessage, selectPattern } from '../actions';\r\nimport { message, RESOURCE_PHASE } from './constants';\r\n\r\nclass Resource extends React.Component {\r\n\r\n    resourceSelection = resource => {\r\n      //  if (this.props.phase === RESOURCE_PHASE) {\r\n            this.props.selectPawn(resource);\r\n            this.props.selectPattern([]);\r\n            this.props.changeMessage(message.placeResource(resource.title));\r\n       // }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.resource) { return null };\r\n        //disabled = {this.props.phase !== RESOURCE_PHASE}\r\n\r\n        return (\r\n            <div>\r\n                <button\r\n                    onClick={() => { this.resourceSelection(this.props.resource) }}\r\n                    className = {`${this.props.resource.title.toLowerCase()} resourceBtn`}\r\n                ></button>\r\n                {this.props.resource.title.toLowerCase()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase,\r\n        resource: state.resources[ownProps.id]\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectPawn, changePhaseTo, changeMessage, selectPattern })(Resource);\r\n"]},"metadata":{},"sourceType":"module"}