{"ast":null,"code":"import { messageSelectResource } from './../components/messages'; //phases\n\nexport const RESOURCE_PHASE = \"RESOURCE_PHASE\";\nexport const BUILDING_PHASE = \"BUILDING_PHASE\";\nexport const SCORING_PHASE = \"SCORING_PHASE\"; //square's occupants\n\nexport const EMPTY_SQUARE = {\n  title: \"EMPTY\",\n  type: \"EMPTY\"\n};\nexport const RESOURCE = \"RESOURCE\"; //= [WOOD, STONE, BRICK, WHEAT, GLASS];\n\nexport const WOOD = {\n  title: \"WOOD\",\n  type: RESOURCE\n};\nexport const STONE = {\n  title: \"STONE\",\n  type: RESOURCE\n};\nexport const BRICK = {\n  title: \"BRICK\",\n  type: RESOURCE\n};\nexport const WHEAT = {\n  title: \"WHEAT\",\n  type: RESOURCE\n};\nexport const GLASS = {\n  title: \"GLASS\",\n  type: RESOURCE\n};\nconst INITIAL_BOARD = {\n  indexes: [11, 12, 13, 14, 21, 22, 23, 24, 31, 32, 33, 34, 41, 42, 43, 44]\n};\nINITIAL_BOARD.indexes.forEach(index => {\n  INITIAL_BOARD[index] = EMPTY_SQUARE;\n}); //INITIAL_BOARD[11] = EMPTY_SQUARE;\n\nexport const INITIAL_STATE = {\n  phase: RESOURCE_PHASE,\n  // phase: BUILDING_PHASE,\n  selectedPawn: null,\n  selectedSquare: null,\n  selectedPattern: [],\n  buildings: [],\n  board: INITIAL_BOARD,\n  message: messageSelectResource\n};\nexport const message = {\n  PlaceResource: resource => \"Place the \".concat(resource, \" or change it\"),\n  ConfirmResourcePlacement: resource => \"Confirm placement \".concat(resource, \" on chosen square or select another resource/square\"),\n  SelectSquareForBuilding: (building, canBePlaced) => canBePlaced ? \"Select a square for the \".concat(building, \" placement. All corresponding resources will be removed. Or start a new round.\") : \"Select  \".concat(building, \" pattern. Or start a new round.\"),\n  SelectResource: \"Select a resource\",\n  ShowPattern: \"Select resources for building constraction. Then select the building for pattern check. Or start a new round.\"\n};","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\constants.js"],"names":["messageSelectResource","RESOURCE_PHASE","BUILDING_PHASE","SCORING_PHASE","EMPTY_SQUARE","title","type","RESOURCE","WOOD","STONE","BRICK","WHEAT","GLASS","INITIAL_BOARD","indexes","forEach","index","INITIAL_STATE","phase","selectedPawn","selectedSquare","selectedPattern","buildings","board","message","PlaceResource","resource","ConfirmResourcePlacement","SelectSquareForBuilding","building","canBePlaced","SelectResource","ShowPattern"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,0BAAtC,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAArB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB,C,CAA4B;;AACnC,OAAO,MAAMC,IAAI,GAAG;AAAEH,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAEC;AAAvB,CAAb;AACP,OAAO,MAAME,KAAK,GAAG;AAAEJ,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAEC;AAAxB,CAAd;AACP,OAAO,MAAMG,KAAK,GAAG;AAAEL,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAEC;AAAxB,CAAd;AACP,OAAO,MAAMI,KAAK,GAAG;AAAEN,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAEC;AAAxB,CAAd;AACP,OAAO,MAAMK,KAAK,GAAG;AAAEP,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAEC;AAAxB,CAAd;AAEP,MAAMM,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,EAAjD,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,EAA7D;AADS,CAAtB;AAGAD,aAAa,CAACC,OAAd,CAAsBC,OAAtB,CAA8BC,KAAK,IAAI;AACnCH,EAAAA,aAAa,CAACG,KAAD,CAAb,GAAuBZ,YAAvB;AACH,CAFD,E,CAGA;;AAEA,OAAO,MAAMa,aAAa,GAAG;AACzBC,EAAAA,KAAK,EAAEjB,cADkB;AAEzB;AACAkB,EAAAA,YAAY,EAAE,IAHW;AAIzBC,EAAAA,cAAc,EAAE,IAJS;AAKzBC,EAAAA,eAAe,EAAE,EALQ;AAMzBC,EAAAA,SAAS,EAAE,EANc;AAOzBC,EAAAA,KAAK,EAAEV,aAPkB;AAQzBW,EAAAA,OAAO,EAAExB;AARgB,CAAtB;AAWP,OAAO,MAAMwB,OAAO,GAAG;AACnBC,EAAAA,aAAa,EAAGC,QAAQ,wBAAiBA,QAAjB,kBADL;AAEnBC,EAAAA,wBAAwB,EAAED,QAAQ,gCAAyBA,QAAzB,wDAFf;AAGnBE,EAAAA,uBAAuB,EAAE,CAACC,QAAD,EAAWC,WAAX,KAA2BA,WAAW,qCAA8BD,QAA9B,wGAAoIA,QAApI,oCAH5C;AAInBE,EAAAA,cAAc,EAAE,mBAJG;AAKnBC,EAAAA,WAAW,EAAE;AALM,CAAhB","sourcesContent":["import { messageSelectResource } from './../components/messages';\r\n\r\n//phases\r\nexport const RESOURCE_PHASE = \"RESOURCE_PHASE\";\r\nexport const BUILDING_PHASE = \"BUILDING_PHASE\";\r\nexport const SCORING_PHASE = \"SCORING_PHASE\";\r\n\r\n//square's occupants\r\nexport const EMPTY_SQUARE = { title: \"EMPTY\", type: \"EMPTY\" };\r\nexport const RESOURCE = \"RESOURCE\";//= [WOOD, STONE, BRICK, WHEAT, GLASS];\r\nexport const WOOD = { title: \"WOOD\", type: RESOURCE };\r\nexport const STONE = { title: \"STONE\", type: RESOURCE };\r\nexport const BRICK = { title: \"BRICK\", type: RESOURCE };\r\nexport const WHEAT = { title: \"WHEAT\", type: RESOURCE };\r\nexport const GLASS = { title: \"GLASS\", type: RESOURCE };\r\n\r\nconst INITIAL_BOARD = {\r\n    indexes: [11, 12, 13, 14, 21, 22, 23, 24, 31, 32, 33, 34, 41, 42, 43, 44]\r\n}\r\nINITIAL_BOARD.indexes.forEach(index => {\r\n    INITIAL_BOARD[index] = EMPTY_SQUARE;\r\n});\r\n//INITIAL_BOARD[11] = EMPTY_SQUARE;\r\n\r\nexport const INITIAL_STATE = {\r\n    phase: RESOURCE_PHASE,\r\n    // phase: BUILDING_PHASE,\r\n    selectedPawn: null,\r\n    selectedSquare: null,\r\n    selectedPattern: [],\r\n    buildings: [],\r\n    board: INITIAL_BOARD,\r\n    message: messageSelectResource\r\n};\r\n\r\nexport const message = {\r\n    PlaceResource:  resource => `Place the ${resource} or change it`,\r\n    ConfirmResourcePlacement: resource => `Confirm placement ${resource} on chosen square or select another resource/square`,\r\n    SelectSquareForBuilding: (building, canBePlaced) => canBePlaced ? `Select a square for the ${building} placement. All corresponding resources will be removed. Or start a new round.` : `Select  ${building} pattern. Or start a new round.`,\r\n    SelectResource: \"Select a resource\",\r\n    ShowPattern: \"Select resources for building constraction. Then select the building for pattern check. Or start a new round.\",\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}