{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resources.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectResource, changePhaseTo } from '../actions';\n\nclass Resources extends React.Component {\n  /*\r\n  resourceSelection = resource => {\r\n      if (this.props.phase === \"RESOURCE_PHASE\") {\r\n          this.props.selectResource(resource);\r\n        }\r\n  }\r\n  */\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Select resource:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(\"Wood\", this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Wood\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(\"Wheat\", this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Wheat\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(\"Brick\", this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Brick\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(\"Glass\", this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Glass\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.selectResource(\"Stone\", this.props.phase);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Stone\"), this.props.selectedPawn);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedPawn: state.selectedPawn,\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectResource,\n  changePhaseTo\n})(Resources);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resources.js"],"names":["React","connect","selectResource","changePhaseTo","Resources","Component","render","props","phase","selectedPawn","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;;AAGA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACpC;;;;;;;AASAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKC,KAAL,CAAWL,cAAX,CAA0B,MAA1B,EAAkC,KAAKK,KAAL,CAAWC,KAA7C;AAAqD,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWL,cAAX,CAA0B,OAA1B,EAAmC,KAAKK,KAAL,CAAWC,KAA9C;AAAsD,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWL,cAAX,CAA0B,OAA1B,EAAmC,KAAKK,KAAL,CAAWC,KAA9C;AAAsD,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWL,cAAX,CAA0B,OAA1B,EAAmC,KAAKK,KAAL,CAAWC,KAA9C;AAAsD,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWL,cAAX,CAA0B,OAA1B,EAAmC,KAAKK,KAAL,CAAWC,KAA9C;AAAsD,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAOK,KAAKD,KAAL,CAAWE,YAPhB,CADJ;AAWH;;AAtBmC;;AAyBxC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,YAAY,EAAEE,KAAK,CAACF,YADjB;AAEHD,IAAAA,KAAK,EAAEG,KAAK,CAACH;AAFV,GAAP;AAIH,CALD;;AAOA,eAAeP,OAAO,CAACS,eAAD,EAAkB;AAAER,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CAA4DC,SAA5D,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectResource, changePhaseTo } from '../actions';\r\n\r\n\r\nclass Resources extends React.Component {\r\n    /*\r\n    resourceSelection = resource => {\r\n        if (this.props.phase === \"RESOURCE_PHASE\") {\r\n            this.props.selectResource(resource);\r\n\r\n        }\r\n    }\r\n    */\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Select resource:\r\n                <button onClick={() => { this.props.selectResource(\"Wood\", this.props.phase) }}>Wood</button>\r\n                <button onClick={() => { this.props.selectResource(\"Wheat\", this.props.phase) }}>Wheat</button>\r\n                <button onClick={() => { this.props.selectResource(\"Brick\", this.props.phase) }}>Brick</button>\r\n                <button onClick={() => { this.props.selectResource(\"Glass\", this.props.phase) }}>Glass</button>\r\n                <button onClick={() => { this.props.selectResource(\"Stone\", this.props.phase) }}>Stone</button>\r\n                {this.props.selectedPawn}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectResource, changePhaseTo })(Resources);\r\n"]},"metadata":{},"sourceType":"module"}