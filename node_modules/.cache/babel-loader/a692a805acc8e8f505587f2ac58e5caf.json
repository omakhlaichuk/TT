{"ast":null,"code":"import _objectSpread from \"D:\\\\Pro\\\\React\\\\tlt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { SELECT_RESOURCE, SELECT_SQUARE, PLACE_RESOURCE, CHANGE_PHASE } from '../actions/types';\nconst INITIAL_SQUARE = {\n  isSelected: false,\n  ocupante: \"empty\",\n  //'wheet', 'wood'..., \"a1\", \"b2\",\"c2\"...\n  willBeEmptied: false\n};\nconst INITIAL_BOARD = {\n  11: _objectSpread({}, INITIAL_SQUARE),\n  12: _objectSpread({}, INITIAL_SQUARE),\n  13: _objectSpread({}, INITIAL_SQUARE),\n  14: _objectSpread({}, INITIAL_SQUARE),\n  21: _objectSpread({}, INITIAL_SQUARE),\n  22: _objectSpread({}, INITIAL_SQUARE),\n  23: _objectSpread({}, INITIAL_SQUARE),\n  24: _objectSpread({}, INITIAL_SQUARE),\n  31: _objectSpread({}, INITIAL_SQUARE),\n  32: _objectSpread({}, INITIAL_SQUARE),\n  33: _objectSpread({}, INITIAL_SQUARE),\n  34: _objectSpread({}, INITIAL_SQUARE),\n  41: _objectSpread({}, INITIAL_SQUARE),\n  42: _objectSpread({}, INITIAL_SQUARE),\n  43: _objectSpread({}, INITIAL_SQUARE),\n  44: _objectSpread({}, INITIAL_SQUARE)\n};\nconst INITIAL_STATE = {\n  phase: \"RESOURCE_PHASE\",\n  selectedPawn: null,\n  board: INITIAL_BOARD\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CHANGE_PHASE:\n      return _objectSpread({}, state, {\n        phase: action.payload\n      });\n\n    case SELECT_RESOURCE:\n      return _objectSpread({}, state, {\n        selectedPawn: action.payload\n      });\n\n    case SELECT_SQUARE:\n      state.board.selectedSquare = action.payload;\n      return _objectSpread({}, state);\n    //TODO update the grid!!!\n\n    case PLACE_RESOURCE:\n      return _objectSpread({}, state, {\n        selectedPawn: null\n      });\n\n    default:\n      return state;\n  }\n});\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\reducers\\index.js"],"names":["SELECT_RESOURCE","SELECT_SQUARE","PLACE_RESOURCE","CHANGE_PHASE","INITIAL_SQUARE","isSelected","ocupante","willBeEmptied","INITIAL_BOARD","INITIAL_STATE","phase","selectedPawn","board","state","action","type","payload","selectedSquare"],"mappings":";AAAA,SACIA,eADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,YAJJ,QAMO,kBANP;AAQA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,QAAQ,EAAE,OAFS;AAEA;AACnBC,EAAAA,aAAa,EAAE;AAHI,CAAvB;AAMA,MAAMC,aAAa,GAAG;AAClB,wBAAQJ,cAAR,CADkB;AAElB,wBAAQA,cAAR,CAFkB;AAGlB,wBAAQA,cAAR,CAHkB;AAIlB,wBAAQA,cAAR,CAJkB;AAKlB,wBAAQA,cAAR,CALkB;AAMlB,wBAAQA,cAAR,CANkB;AAOlB,wBAAQA,cAAR,CAPkB;AAQlB,wBAAQA,cAAR,CARkB;AASlB,wBAAQA,cAAR,CATkB;AAUlB,wBAAQA,cAAR,CAVkB;AAWlB,wBAAQA,cAAR,CAXkB;AAYlB,wBAAQA,cAAR,CAZkB;AAalB,wBAAQA,cAAR,CAbkB;AAclB,wBAAQA,cAAR,CAdkB;AAelB,wBAAQA,cAAR,CAfkB;AAgBlB,wBAAQA,cAAR;AAhBkB,CAAtB;AAoBA,MAAMK,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,gBADW;AAElBC,EAAAA,YAAY,EAAE,IAFI;AAGlBC,EAAAA,KAAK,EAAEJ;AAHW,CAAtB;AAOA,gBAAe,CAACK,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKZ,YAAL;AACI,+BAAYU,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AAEJ,SAAKhB,eAAL;AACI,+BAAYa,KAAZ;AAAmBF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAAxC;;AAEA,SAAKf,aAAL;AACAY,MAAAA,KAAK,CAACD,KAAN,CAAYK,cAAZ,GAA6BH,MAAM,CAACE,OAApC;AACA,+BAAYH,KAAZ;AAEA;;AACJ,SAAKX,cAAL;AACI,+BAAYW,KAAZ;AAAmBF,QAAAA,YAAY,EAAE;AAAjC;;AAEJ;AACI,aAAOE,KAAP;AAjBR;AAmBH,CApBD;AAwBA","sourcesContent":["import {\r\n    SELECT_RESOURCE,\r\n    SELECT_SQUARE,\r\n    PLACE_RESOURCE,\r\n    CHANGE_PHASE\r\n    \r\n} from '../actions/types'\r\n\r\nconst INITIAL_SQUARE = {\r\n    isSelected: false,\r\n    ocupante: \"empty\", //'wheet', 'wood'..., \"a1\", \"b2\",\"c2\"...\r\n    willBeEmptied: false\r\n};\r\n\r\nconst INITIAL_BOARD = {\r\n    11: {...INITIAL_SQUARE},\r\n    12: {...INITIAL_SQUARE},\r\n    13: {...INITIAL_SQUARE},\r\n    14: {...INITIAL_SQUARE},\r\n    21: {...INITIAL_SQUARE},\r\n    22: {...INITIAL_SQUARE},\r\n    23: {...INITIAL_SQUARE},\r\n    24: {...INITIAL_SQUARE},\r\n    31: {...INITIAL_SQUARE},\r\n    32: {...INITIAL_SQUARE},\r\n    33: {...INITIAL_SQUARE},\r\n    34: {...INITIAL_SQUARE},\r\n    41: {...INITIAL_SQUARE},\r\n    42: {...INITIAL_SQUARE},\r\n    43: {...INITIAL_SQUARE},\r\n    44: {...INITIAL_SQUARE}\r\n};\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    phase: \"RESOURCE_PHASE\",\r\n    selectedPawn: null,\r\n    board: INITIAL_BOARD\r\n\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case CHANGE_PHASE:\r\n            return { ...state, phase: action.payload };\r\n        \r\n        case SELECT_RESOURCE:\r\n            return { ...state, selectedPawn: action.payload };\r\n            \r\n            case SELECT_SQUARE:\r\n            state.board.selectedSquare = action.payload;\r\n            return { ...state };\r\n\r\n            //TODO update the grid!!!\r\n        case PLACE_RESOURCE:\r\n            return { ...state, selectedPawn: null };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n/*import { combineReducers } from 'redux';\r\n\r\nimport selectedReducer from './selectedReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    selected:selectedReducer\r\n\r\n});*/"]},"metadata":{},"sourceType":"module"}