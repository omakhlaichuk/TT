{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tt\\\\src\\\\components\\\\Buildings\\\\Modal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { message, WILD, ALL_RESOURCES } from './constants';\n\nconst Modal = props => {\n  const renderResourceBtn = resource => {\n    return React.createElement(\"button\", {\n      key: resource.title,\n      onClick: () => {\n        props.resourceSelection(resource);\n      },\n      className: \"\".concat(resource.title.toLowerCase(), \" resourceBtn\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n  };\n\n  return ReactDOM.createPortal(React.createElement(\"div\", {\n    className: \" modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \" modal-body \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"\\u0421hoose a resource to turn into a wild \"), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \" \", ALL_RESOURCES.map(resource => {\n    return renderResourceBtn(resource);\n  }))), React.createElement(\"div\", {\n    className: \"actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.action, \"action\"))), document.querySelector('.resourceSelector'));\n};\n\nexport default Modal;\n/*\r\nvar createPet = function (name) {\r\n    var sex;\r\n\r\n    return {\r\n        setName: function (newName) {\r\n            name = newName;\r\n        },\r\n\r\n        getName: function () {\r\n            return name;\r\n        },\r\n\r\n        getSex: function () {\r\n            return sex;\r\n        },\r\n\r\n        setSex: function (newSex) {\r\n            if (typeof newSex === 'string' && (newSex.toLowerCase() === 'male' || newSex.toLowerCase() === 'female')) {\r\n                sex = newSex;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar pet = createPet('Vivie');\r\npet.getName();                  // Vivie\r\n\r\npet.setName('Oliver');\r\npet.setSex('male');\r\npet.getSex();                   // male\r\npet.getName();                  // Oliver\r\n\r\nexport default instantEffects\r\n\r\n    ; (function (global, $) {\r\n\r\n        // 'new' an object\r\n        var Greetr = function (firstName, lastName, language) {\r\n            return new Greetr.init(firstName, lastName, language);\r\n        }\r\n\r\n        // hidden within the scope of the IIFE and never directly accessible\r\n        var supportedLangs = ['en', 'es'];\r\n\r\n        // informal greetings\r\n        var greetings = {\r\n            en: 'Hello',\r\n            es: 'Hola'\r\n        };\r\n\r\n        // formal greetings\r\n        var formalGreetings = {\r\n            en: 'Greetings',\r\n            es: 'Saludos'\r\n        };\r\n\r\n        // logger messages\r\n        var logMessages = {\r\n            en: 'Logged in',\r\n            es: 'Inició sesión'\r\n        };\r\n\r\n        // prototype holds methods (to save memory space)\r\n        Greetr.prototype = {\r\n\r\n            // 'this' refers to the calling object at execution time\r\n            fullName: function () {\r\n                return this.firstName + ' ' + this.lastName;\r\n            },\r\n\r\n            validate: function () {\r\n                // check that is a valid language\r\n                // references the externally inaccessible 'supportedLangs' within the closure\r\n                if (supportedLangs.indexOf(this.language) === -1) {\r\n                    throw \"Invalid language\";\r\n                }\r\n            },\r\n\r\n            // retrieve messages from object by referring to properties using [] syntax\r\n            greeting: function () {\r\n                return greetings[this.language] + ' ' + this.firstName + '!';\r\n            },\r\n\r\n            formalGreeting: function () {\r\n                return formalGreetings[this.language] + ', ' + this.fullName();\r\n            },\r\n\r\n            // chainable methods return their own containing object\r\n            greet: function (formal) {\r\n                var msg;\r\n\r\n                // if undefined or null it will be coerced to 'false'\r\n                if (formal) {\r\n                    msg = this.formalGreeting();\r\n                }\r\n                else {\r\n                    msg = this.greeting();\r\n                }\r\n\r\n                if (console) {\r\n                    console.log(msg);\r\n                }\r\n\r\n                // 'this' refers to the calling object at execution time\r\n                // makes the method chainable\r\n                return this;\r\n            },\r\n\r\n            log: function () {\r\n                if (console) {\r\n                    console.log(logMessages[this.language] + ': ' + this.fullName());\r\n                }\r\n\r\n                // make chainable\r\n                return this;\r\n            },\r\n\r\n            setLang: function (lang) {\r\n\r\n                // set the language\r\n                this.language = lang;\r\n\r\n                // validate\r\n                this.validate();\r\n\r\n                // make chainable\r\n                return this;\r\n            },\r\n\r\n            HTMLGreeting: function (selector, formal) {\r\n                if (!$) {\r\n                    throw 'jQuery not loaded';\r\n                }\r\n\r\n                if (!selector) {\r\n                    throw 'Missing jQuery selector';\r\n                }\r\n\r\n                // determine the message\r\n                var msg;\r\n                if (formal) {\r\n                    msg = this.formalGreeting();\r\n                }\r\n                else {\r\n                    msg = this.greeting();\r\n                }\r\n\r\n                // inject the message in the chosen place in the DOM\r\n                $(selector).html(msg);\r\n\r\n                // make chainable\r\n                return this;\r\n            }\r\n\r\n        };\r\n\r\n        // the actual object is created here, allowing us to 'new' an object without calling 'new'\r\n        Greetr.init = function (firstName, lastName, language) {\r\n\r\n            var self = this;\r\n            self.firstName = firstName || '';\r\n            self.lastName = lastName || '';\r\n            self.language = language || 'en';\r\n\r\n            self.validate();\r\n\r\n        }\r\n\r\n        // trick borrowed from jQuery so we don't have to use the 'new' keyword\r\n        Greetr.init.prototype = Greetr.prototype;\r\n\r\n        // attach our Greetr to the global object, and provide a shorthand '$G' for ease our poor fingers\r\n        global.Greetr = global.G$ = Greetr;\r\n\r\n    }(window, jQuery));\r\n    */","map":{"version":3,"sources":["D:\\Pro\\React\\tt\\src\\components\\Buildings\\Modal.js"],"names":["React","ReactDOM","message","WILD","ALL_RESOURCES","Modal","props","renderResourceBtn","resource","title","resourceSelection","toLowerCase","createPortal","map","action","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,aAAxB,QAA6C,aAA7C;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAMC,iBAAiB,GAAGC,QAAQ,IAAI;AAClC,WAAO;AACH,MAAA,GAAG,EAAEA,QAAQ,CAACC,KADX;AAEH,MAAA,OAAO,EAAE,MAAM;AAAEH,QAAAA,KAAK,CAACI,iBAAN,CAAwBF,QAAxB;AAAmC,OAFjD;AAGH,MAAA,SAAS,YAAKA,QAAQ,CAACC,KAAT,CAAeE,WAAf,EAAL,iBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKH,GAND;;AAQA,SAAOV,QAAQ,CAACW,YAAT,CACH;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKR,aAAa,CAACS,GAAd,CACDL,QAAQ,IAAI;AACR,WAAOD,iBAAiB,CAACC,QAAD,CAAxB;AACH,GAHA,CAAL,CADJ,CAFJ,EAUI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACQ,MADX,WAVJ,CADJ,CADG,EAiBHC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAjBG,CAAP;AAoBH,CA7BD;;AAgCA,eAAeX,KAAf;AAGA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { message, WILD, ALL_RESOURCES } from './constants';\r\n\r\n\r\nconst Modal = props => {\r\n    const renderResourceBtn = resource => {\r\n        return <button\r\n            key={resource.title}\r\n            onClick={() => { props.resourceSelection(resource) }}\r\n            className={`${resource.title.toLowerCase()} resourceBtn`}\r\n        ></button>\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\" modal\">\r\n            <div className=\" modal-body \">\r\n                <div className=\"header\">Сhoose a resource to turn into a wild </div>\r\n                <div className=\"content\">\r\n                    <p> {ALL_RESOURCES.map(\r\n                        resource => {\r\n                            return renderResourceBtn(resource);\r\n                        })\r\n                    }\r\n                    </p>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.action}action\r\n        </div>\r\n            </div>\r\n        </div >,\r\n        document.querySelector('.resourceSelector')\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default Modal;\r\n\r\n\r\n/*\r\nvar createPet = function (name) {\r\n    var sex;\r\n\r\n    return {\r\n        setName: function (newName) {\r\n            name = newName;\r\n        },\r\n\r\n        getName: function () {\r\n            return name;\r\n        },\r\n\r\n        getSex: function () {\r\n            return sex;\r\n        },\r\n\r\n        setSex: function (newSex) {\r\n            if (typeof newSex === 'string' && (newSex.toLowerCase() === 'male' || newSex.toLowerCase() === 'female')) {\r\n                sex = newSex;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar pet = createPet('Vivie');\r\npet.getName();                  // Vivie\r\n\r\npet.setName('Oliver');\r\npet.setSex('male');\r\npet.getSex();                   // male\r\npet.getName();                  // Oliver\r\n\r\nexport default instantEffects\r\n\r\n    ; (function (global, $) {\r\n\r\n        // 'new' an object\r\n        var Greetr = function (firstName, lastName, language) {\r\n            return new Greetr.init(firstName, lastName, language);\r\n        }\r\n\r\n        // hidden within the scope of the IIFE and never directly accessible\r\n        var supportedLangs = ['en', 'es'];\r\n\r\n        // informal greetings\r\n        var greetings = {\r\n            en: 'Hello',\r\n            es: 'Hola'\r\n        };\r\n\r\n        // formal greetings\r\n        var formalGreetings = {\r\n            en: 'Greetings',\r\n            es: 'Saludos'\r\n        };\r\n\r\n        // logger messages\r\n        var logMessages = {\r\n            en: 'Logged in',\r\n            es: 'Inició sesión'\r\n        };\r\n\r\n        // prototype holds methods (to save memory space)\r\n        Greetr.prototype = {\r\n\r\n            // 'this' refers to the calling object at execution time\r\n            fullName: function () {\r\n                return this.firstName + ' ' + this.lastName;\r\n            },\r\n\r\n            validate: function () {\r\n                // check that is a valid language\r\n                // references the externally inaccessible 'supportedLangs' within the closure\r\n                if (supportedLangs.indexOf(this.language) === -1) {\r\n                    throw \"Invalid language\";\r\n                }\r\n            },\r\n\r\n            // retrieve messages from object by referring to properties using [] syntax\r\n            greeting: function () {\r\n                return greetings[this.language] + ' ' + this.firstName + '!';\r\n            },\r\n\r\n            formalGreeting: function () {\r\n                return formalGreetings[this.language] + ', ' + this.fullName();\r\n            },\r\n\r\n            // chainable methods return their own containing object\r\n            greet: function (formal) {\r\n                var msg;\r\n\r\n                // if undefined or null it will be coerced to 'false'\r\n                if (formal) {\r\n                    msg = this.formalGreeting();\r\n                }\r\n                else {\r\n                    msg = this.greeting();\r\n                }\r\n\r\n                if (console) {\r\n                    console.log(msg);\r\n                }\r\n\r\n                // 'this' refers to the calling object at execution time\r\n                // makes the method chainable\r\n                return this;\r\n            },\r\n\r\n            log: function () {\r\n                if (console) {\r\n                    console.log(logMessages[this.language] + ': ' + this.fullName());\r\n                }\r\n\r\n                // make chainable\r\n                return this;\r\n            },\r\n\r\n            setLang: function (lang) {\r\n\r\n                // set the language\r\n                this.language = lang;\r\n\r\n                // validate\r\n                this.validate();\r\n\r\n                // make chainable\r\n                return this;\r\n            },\r\n\r\n            HTMLGreeting: function (selector, formal) {\r\n                if (!$) {\r\n                    throw 'jQuery not loaded';\r\n                }\r\n\r\n                if (!selector) {\r\n                    throw 'Missing jQuery selector';\r\n                }\r\n\r\n                // determine the message\r\n                var msg;\r\n                if (formal) {\r\n                    msg = this.formalGreeting();\r\n                }\r\n                else {\r\n                    msg = this.greeting();\r\n                }\r\n\r\n                // inject the message in the chosen place in the DOM\r\n                $(selector).html(msg);\r\n\r\n                // make chainable\r\n                return this;\r\n            }\r\n\r\n        };\r\n\r\n        // the actual object is created here, allowing us to 'new' an object without calling 'new'\r\n        Greetr.init = function (firstName, lastName, language) {\r\n\r\n            var self = this;\r\n            self.firstName = firstName || '';\r\n            self.lastName = lastName || '';\r\n            self.language = language || 'en';\r\n\r\n            self.validate();\r\n\r\n        }\r\n\r\n        // trick borrowed from jQuery so we don't have to use the 'new' keyword\r\n        Greetr.init.prototype = Greetr.prototype;\r\n\r\n        // attach our Greetr to the global object, and provide a shorthand '$G' for ease our poor fingers\r\n        global.Greetr = global.G$ = Greetr;\r\n\r\n    }(window, jQuery));\r\n    */"]},"metadata":{},"sourceType":"module"}