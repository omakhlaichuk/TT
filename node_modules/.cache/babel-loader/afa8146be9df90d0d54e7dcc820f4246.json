{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tt\\\\src\\\\components\\\\Buildings\\\\Modal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport ResourceBtn from './../ResourceBtn';\nimport { changeResourceToWild } from './../../actions';\nimport { ALL_RESOURCES } from './../constants';\n\nconst Modal = props => {\n  let isShowModal = true;\n\n  if (isShowModal) {\n    return ReactDOM.createPortal(React.createElement(\"div\", {\n      className: \" modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" modal-body \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u0421hoose a resource to turn into a wild \"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" \", ALL_RESOURCES.map(resource => React.createElement(ResourceBtn, {\n      key: resource.title,\n      resource: resource,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        props.changeResourceToWild();\n        isShowModal = false;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Confirm changing to WILD\")))), document.querySelector('.flexRow'));\n  } else {\n    return null;\n  }\n};\n\nexport default connect(null, {\n  changeResourceToWild\n})(Modal);","map":{"version":3,"sources":["D:\\Pro\\React\\tt\\src\\components\\Buildings\\Modal.js"],"names":["React","ReactDOM","connect","ResourceBtn","changeResourceToWild","ALL_RESOURCES","Modal","props","isShowModal","createPortal","map","resource","title","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,SAASC,oBAAT,QAAqC,iBAArC;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,MAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAGA,WAAH,EAAgB;AAChB,WAAOP,QAAQ,CAACQ,YAAT,CACH;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADJ,EAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACIJ,aAAa,CAACK,GAAd,CACIC,QAAQ,IAAI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,QAAQ,CAACC,KAA3B;AAAkC,MAAA,QAAQ,EAAED,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,CADJ,CADJ,CAFJ,EAUI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,OAAO,EAAE,MAAM;AAAEJ,QAAAA,KAAK,CAACH,oBAAN;AAA8BI,QAAAA,WAAW,GAAG,KAAd;AAAsB,OADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAVJ,CADJ,CADG,EAmBHK,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAnBG,CAAP;AAqBE,GAtBF,MAsBQ;AAAC,WAAO,IAAP;AAAY;AAGxB,CA5BD;;AA8BA,eAAeZ,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA;AAAF,CAAP,CAAP,CAAwCE,KAAxC,CAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport ResourceBtn from './../ResourceBtn';\r\n\r\nimport { changeResourceToWild } from './../../actions';\r\nimport { ALL_RESOURCES } from './../constants';\r\n\r\n\r\nconst Modal = props => {\r\n    let isShowModal = true;\r\n    \r\n    if(isShowModal) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\" modal\">\r\n            <div className=\" modal-body \">\r\n                <div className=\"header\">Ð¡hoose a resource to turn into a wild </div>\r\n                <div className=\"content\">\r\n                    <p> {\r\n                        ALL_RESOURCES.map(\r\n                            resource => <ResourceBtn key={resource.title} resource={resource} />\r\n                        )\r\n                    }\r\n                    </p>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <button\r\n                        onClick={() => { props.changeResourceToWild(); isShowModal = false  }}\r\n                    >Confirm changing to WILD</button>\r\n                </div>\r\n            </div>\r\n        </div >,\r\n        document.querySelector('.flexRow')\r\n\r\n    )} else {return null}\r\n\r\n\r\n};\r\n\r\nexport default connect(null, { changeResourceToWild })(Modal);"]},"metadata":{},"sourceType":"module"}