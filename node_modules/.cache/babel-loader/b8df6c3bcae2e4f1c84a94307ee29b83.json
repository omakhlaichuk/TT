{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Square.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; //import Grid from './Grid';\n\nimport '../css/square.css';\nimport { selectSquare, selectPattern } from './../actions';\n\nclass Square extends React.Component {\n  onCellClick(phase) {\n    if (this.props.phase === 'RESOURCE_PHASE') {\n      if (this.props.cell === \"empty\") {\n        this.props.selectSquare(this.props.index);\n      } else {\n        this.props.selectSquare(null);\n      }\n    } else if (this.props.phase === 'BUILDING_PHASE') {\n      if (this.props.selectedPawn === null) {\n        this.props.selectPattern(this.props.index);\n      }\n    }\n  }\n\n  render() {\n    let cellCalss = \"cell\";\n\n    if (this.props.selectedSquare === this.props.index) {\n      cellCalss += \" selectedCell\";\n    }\n\n    if (this.props.selectedPattern.filter(el => el === this.props.index)) {\n      cellCalss += \" patternedCell\";\n    }\n\n    return React.createElement(\"div\", {\n      className: cellCalss,\n      onClick: () => {\n        this.onCellClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.cell);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cell: state.board[ownProps.index],\n    selectedSquare: state.board.selectedSquare,\n    selectedPattern: state.board.selectedPattern,\n    selectedPawn: state.selectedPawn,\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectSquare,\n  selectPattern\n})(Square);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Square.js"],"names":["React","connect","selectSquare","selectPattern","Square","Component","onCellClick","phase","props","cell","index","selectedPawn","render","cellCalss","selectedSquare","selectedPattern","filter","el","mapStateToProps","state","ownProps","board"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAO,mBAAP;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,cAA5C;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,QAAI,KAAKC,KAAL,CAAWD,KAAX,KAAqB,gBAAzB,EAA2C;AACvC,UAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,OAAxB,EAAiC;AAC7B,aAAKD,KAAL,CAAWN,YAAX,CAAwB,KAAKM,KAAL,CAAWE,KAAnC;AACH,OAFD,MAEO;AAAE,aAAKF,KAAL,CAAWN,YAAX,CAAwB,IAAxB;AAA+B;AAC3C,KAJD,MAIQ,IAAI,KAAKM,KAAL,CAAWD,KAAX,KAAqB,gBAAzB,EAA2C;AAC/C,UAAI,KAAKC,KAAL,CAAWG,YAAX,KAA4B,IAAhC,EAAsC;AAClC,aAAKH,KAAL,CAAWL,aAAX,CAAyB,KAAKK,KAAL,CAAWE,KAApC;AAEH;AACJ;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,MAAhB;;AACA,QAAI,KAAKL,KAAL,CAAWM,cAAX,KAA8B,KAAKN,KAAL,CAAWE,KAA7C,EAAoD;AAAEG,MAAAA,SAAS,IAAI,eAAb;AAA+B;;AACrF,QAAK,KAAKL,KAAL,CAAWO,eAAX,CAA2BC,MAA3B,CAAkCC,EAAE,IAAIA,EAAE,KAAK,KAAKT,KAAL,CAAWE,KAA1D,CAAL,EAAuE;AAAEG,MAAAA,SAAS,IAAE,gBAAX;AAA6B;;AAEtG,WACI;AAAK,MAAA,SAAS,EAAEA,SAAhB;AAA2B,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKP,WAAL;AAAoB,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKE,KAAL,CAAWC,IADhB,CADJ;AAKH;;AAzBgC;;AA4BrC,MAAMS,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHX,IAAAA,IAAI,EAAEU,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACV,KAArB,CADH;AAEHI,IAAAA,cAAc,EAAEK,KAAK,CAACE,KAAN,CAAYP,cAFzB;AAGHC,IAAAA,eAAe,EAAEI,KAAK,CAACE,KAAN,CAAYN,eAH1B;AAIHJ,IAAAA,YAAY,EAAEQ,KAAK,CAACR,YAJjB;AAKHJ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AALV,GAAP;AAOH,CARD;;AAUA,eAAeN,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAA0DC,MAA1D,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//import Grid from './Grid';\r\nimport '../css/square.css';\r\nimport { selectSquare, selectPattern } from './../actions';\r\n\r\nclass Square extends React.Component {\r\n\r\n    onCellClick(phase) {\r\n        if (this.props.phase === 'RESOURCE_PHASE') {\r\n            if (this.props.cell === \"empty\") {\r\n                this.props.selectSquare(this.props.index);\r\n            } else { this.props.selectSquare(null) }\r\n        }  else if (this.props.phase === 'BUILDING_PHASE') {\r\n            if (this.props.selectedPawn === null) {\r\n                this.props.selectPattern(this.props.index);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let cellCalss = \"cell\";\r\n        if (this.props.selectedSquare === this.props.index) { cellCalss += \" selectedCell\"; }\r\n        if ( this.props.selectedPattern.filter(el => el === this.props.index)) { cellCalss+=\" patternedCell\" }\r\n\r\n        return (\r\n            <div className={cellCalss} onClick={() => { this.onCellClick() }}>\r\n                {this.props.cell}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        cell: state.board[ownProps.index],\r\n        selectedSquare: state.board.selectedSquare,\r\n        selectedPattern: state.board.selectedPattern,\r\n        selectedPawn: state.selectedPawn,\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSquare, selectPattern })(Square);\r\n\r\n"]},"metadata":{},"sourceType":"module"}