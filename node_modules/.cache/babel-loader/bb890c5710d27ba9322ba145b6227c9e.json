{"ast":null,"code":"import { messageSelectResource } from './../components/messages'; //phases\n\nexport const RESOURCE_PHASE = \"RESOURCE_PHASE\";\nexport const BUILDING_PHASE = \"BUILDING_PHASE\";\nexport const SCORING_PHASE = \"SCORING_PHASE\"; //square's occupants\n\nexport const EMPTY_SQUARE = \"EMPTY\";\nexport const WOOD = \"WOOD\";\nexport const STONE = \"STONE\";\nexport const BRICK = \"BRICK\";\nexport const WHEAT = \"WHEAT\";\nexport const GLASS = \"GLASS\";\nexport const RESOURCE = [WOOD, STONE, BRICK, WHEAT, GLASS];\nconst INITIAL_BOARD = {\n  indexes: [{\n    x: 1,\n    y: 1\n  }, {\n    x: 1,\n    y: 2\n  }, {\n    x: 1,\n    y: 3\n  }, {\n    x: 1,\n    y: 4\n  }, {\n    x: 2,\n    y: 1\n  }, {\n    x: 2,\n    y: 2\n  }, {\n    x: 2,\n    y: 3\n  }, {\n    x: 3,\n    y: 4\n  }, {\n    x: 3,\n    y: 1\n  }, {\n    x: 3,\n    y: 2\n  }, {\n    x: 3,\n    y: 3\n  }, {\n    x: 3,\n    y: 4\n  }, {\n    x: 4,\n    y: 1\n  }, {\n    x: 4,\n    y: 2\n  }, {\n    x: 4,\n    y: 3\n  }, {\n    x: 4,\n    y: 4\n  }]\n};\nINITIAL_BOARD.indexes.forEach(index => {\n  INITIAL_BOARD[index] = {\n    occupant: \"WOOD\"\n  };\n});\nINITIAL_BOARD[{\n  x: 1,\n  y: 1\n}] = {\n  occupant: EMPTY_SQUARE\n}; //  11: \"BLOCK\",\n///  12: \"wheat\",\n\nexport const INITIAL_STATE = {\n  phase: RESOURCE_PHASE,\n  // phase: BUILDING_PHASE,\n  selectedPawn: null,\n  selectedSquare: null,\n  selectedPattern: [],\n  buildings: [],\n  board: INITIAL_BOARD,\n  message: messageSelectResource()\n};","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\constants.js"],"names":["messageSelectResource","RESOURCE_PHASE","BUILDING_PHASE","SCORING_PHASE","EMPTY_SQUARE","WOOD","STONE","BRICK","WHEAT","GLASS","RESOURCE","INITIAL_BOARD","indexes","x","y","forEach","index","occupant","INITIAL_STATE","phase","selectedPawn","selectedSquare","selectedPattern","buildings","board","message"],"mappings":"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","sourcesContent":["import { messageSelectResource } from './../components/messages';\r\n\r\n//phases\r\nexport const RESOURCE_PHASE = \"RESOURCE_PHASE\";\r\nexport const BUILDING_PHASE = \"BUILDING_PHASE\";\r\nexport const SCORING_PHASE = \"SCORING_PHASE\";\r\n\r\n//square's occupants\r\nexport const EMPTY_SQUARE = \"EMPTY\";\r\nexport const WOOD = \"WOOD\";\r\nexport const STONE = \"STONE\";\r\nexport const BRICK = \"BRICK\";\r\nexport const WHEAT = \"WHEAT\";\r\nexport const GLASS = \"GLASS\";\r\nexport const RESOURCE = [WOOD, STONE, BRICK, WHEAT, GLASS];\r\n\r\nconst INITIAL_BOARD = {\r\n    indexes: [\r\n        { x: 1, y: 1 },\r\n        { x: 1, y: 2 },\r\n        { x: 1, y: 3 },\r\n        { x: 1, y: 4 },\r\n        { x: 2, y: 1 },\r\n        { x: 2, y: 2 },\r\n        { x: 2, y: 3 },\r\n        { x: 3, y: 4 },\r\n        { x: 3, y: 1 },\r\n        { x: 3, y: 2 },\r\n        { x: 3, y: 3 },\r\n        { x: 3, y: 4 },\r\n        { x: 4, y: 1 },\r\n        { x: 4, y: 2 },\r\n        { x: 4, y: 3 },\r\n        { x: 4, y: 4 }\r\n    ]\r\n}\r\n\r\nINITIAL_BOARD.indexes.forEach(index => {\r\n    INITIAL_BOARD[index] = { occupant: \"WOOD\" };\r\n});\r\nINITIAL_BOARD[{ x: 1, y: 1 }] = { occupant: EMPTY_SQUARE };\r\n//  11: \"BLOCK\",\r\n///  12: \"wheat\",\r\n\r\nexport const INITIAL_STATE = {\r\n    phase: RESOURCE_PHASE,\r\n    // phase: BUILDING_PHASE,\r\n    selectedPawn: null,\r\n    selectedSquare: null,\r\n    selectedPattern: [],\r\n    buildings: [],\r\n    board: INITIAL_BOARD,\r\n    message: messageSelectResource()\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}