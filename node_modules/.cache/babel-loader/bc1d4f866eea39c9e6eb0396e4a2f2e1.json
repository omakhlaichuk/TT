{"ast":null,"code":"export const scoring = {\n  indexToX: index => index.toString().charAt(0),\n  indexToY: index => index.toString().charAt(1),\n  xyToIndex: (x, y) => parseInt(x.toString() + y.toString()),\n  getAdjacentIndexes: index => {\n    const x = this.indexToX(index);\n    const y = this.indexToY(index);\n    const adjacent = [];\n\n    if (x > 1) {\n      adjacent.push(xyToIndex(x - 1, y));\n    }\n\n    ;\n\n    if (x < 4) {\n      adjacent.push(xyToIndex(x + 1, y));\n    }\n\n    ;\n\n    if (y > 1) {\n      adjacent.push(xyToIndex(x, y - 1));\n    }\n\n    ;\n\n    if (y > 4) {\n      adjacent.push(xyToIndex(x, y + 1));\n    }\n\n    ;\n    return adjacent;\n  },\n  findBuildings: buildingTitle => board.indexes.filter(index => board[index].title === buildingTitle),\n  getAdjacentWithType: (index, type) => getAdjacentIndexes(index).filter(index => board[index].type === type),\n  calcWell: board => {\n    let score = 0;\n    findBuildings(5).forEach(wellIndex => {\n      score += getAdjacentWithType(wellIndex, 1).length;\n    });\n    return score;\n  }\n};","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Buildings\\scoring.js"],"names":["scoring","indexToX","index","toString","charAt","indexToY","xyToIndex","x","y","parseInt","getAdjacentIndexes","adjacent","push","findBuildings","buildingTitle","board","indexes","filter","title","getAdjacentWithType","type","calcWell","score","forEach","wellIndex","length"],"mappings":"AAAA,OAAQ,MAAMA,OAAO,GAAI;AAEpBC,EAAAA,QAAQ,EAAEC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiBC,MAAjB,CAAwB,CAAxB,CAFC;AAGpBC,EAAAA,QAAQ,EAAEH,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiBC,MAAjB,CAAwB,CAAxB,CAHC;AAIpBE,EAAAA,SAAS,EAAE,CAACC,CAAD,EAAGC,CAAH,KAAUC,QAAQ,CAACF,CAAC,CAACJ,QAAF,KAAeK,CAAC,CAACL,QAAF,EAAhB,CAJT;AAMpBO,EAAAA,kBAAkB,EAAER,KAAK,IAAI;AAC1B,UAAMK,CAAC,GAAG,KAAKN,QAAL,CAAcC,KAAd,CAAV;AACA,UAAMM,CAAC,GAAG,KAAKH,QAAL,CAAcH,KAAd,CAAV;AACA,UAAMS,QAAQ,GAAG,EAAjB;;AACA,QAAIJ,CAAC,GAAG,CAAR,EAAW;AAACI,MAAAA,QAAQ,CAACC,IAAT,CAAcN,SAAS,CAACC,CAAC,GAAC,CAAH,EAAKC,CAAL,CAAvB;AAAiC;;AAAA;;AAC7C,QAAID,CAAC,GAAG,CAAR,EAAW;AAACI,MAAAA,QAAQ,CAACC,IAAT,CAAcN,SAAS,CAACC,CAAC,GAAC,CAAH,EAAKC,CAAL,CAAvB;AAAiC;;AAAA;;AAC7C,QAAIA,CAAC,GAAG,CAAR,EAAW;AAACG,MAAAA,QAAQ,CAACC,IAAT,CAAcN,SAAS,CAACC,CAAD,EAAGC,CAAC,GAAC,CAAL,CAAvB;AAAiC;;AAAA;;AAC7C,QAAIA,CAAC,GAAG,CAAR,EAAW;AAACG,MAAAA,QAAQ,CAACC,IAAT,CAAcN,SAAS,CAACC,CAAD,EAAGC,CAAC,GAAC,CAAL,CAAvB;AAAiC;;AAAA;AAC7C,WAAOG,QAAP;AACH,GAfoB;AAiBpBE,EAAAA,aAAa,EAAEC,aAAa,IAAIC,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBf,KAAK,IAAIa,KAAK,CAACb,KAAD,CAAL,CAAagB,KAAb,KAAuBJ,aAArD,CAjBZ;AAmBpBK,EAAAA,mBAAmB,EAAE,CAACjB,KAAD,EAAQkB,IAAR,KAAiBV,kBAAkB,CAACR,KAAD,CAAlB,CAA0Be,MAA1B,CAAiCf,KAAK,IAAIa,KAAK,CAACb,KAAD,CAAL,CAAakB,IAAb,KAAsBA,IAAhE,CAnBlB;AAqBpBC,EAAAA,QAAQ,EAAGN,KAAD,IAAW;AAClB,QAAIO,KAAK,GAAG,CAAZ;AACAT,IAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBU,OAAjB,CAAyBC,SAAS,IAAI;AAAEF,MAAAA,KAAK,IAAIH,mBAAmB,CAACK,SAAD,EAAY,CAAZ,CAAnB,CAAkCC,MAA3C;AACvC,KADD;AAEA,WAAOH,KAAP;AACH;AA1BoB,CAAjB","sourcesContent":["export  const scoring =  {\r\n\r\n     indexToX: index => index.toString().charAt(0),\r\n     indexToY: index => index.toString().charAt(1),\r\n     xyToIndex: (x,y) =>  parseInt(x.toString() + y.toString()),\r\n\r\n     getAdjacentIndexes: index => {\r\n        const x = this.indexToX(index);\r\n        const y = this.indexToY(index);\r\n        const adjacent = [];\r\n        if (x > 1) {adjacent.push(xyToIndex(x-1,y) )};\r\n        if (x < 4) {adjacent.push(xyToIndex(x+1,y) )};\r\n        if (y > 1) {adjacent.push(xyToIndex(x,y-1) )};\r\n        if (y > 4) {adjacent.push(xyToIndex(x,y+1) )};\r\n        return adjacent;\r\n    },\r\n\r\n     findBuildings: buildingTitle => board.indexes.filter(index => board[index].title === buildingTitle),\r\n\r\n     getAdjacentWithType: (index, type) => getAdjacentIndexes(index).filter(index => board[index].type === type),\r\n\r\n     calcWell: (board) => {\r\n        let score = 0;\r\n        findBuildings(5).forEach(wellIndex => { score += getAdjacentWithType(wellIndex, 1).length         \r\n        });\r\n        return score;\r\n    },\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}