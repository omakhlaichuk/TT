{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Buildings\\\\Building.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchBuilding, changePhaseTo } from './../../actions';\nimport data from './buildings.json';\n\nclass Building extends React.Component {\n  // const [f_building, setF_building] = useState([]);\n  componentDidMount() {\n    fetchBuilding(data.Well);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.title);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchBuilding,\n  changePhaseTo\n})(Building);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Buildings\\Building.js"],"names":["React","useState","useEffect","connect","fetchBuilding","changePhaseTo","data","Building","Component","componentDidMount","Well","render","props","title","mapStateToProps","state","phase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,iBAA7C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACpC;AAEAC,EAAAA,iBAAiB,GAAG;AACnBL,IAAAA,aAAa,CAACE,IAAI,CAACI,IAAN,CAAb;AACA;;AAEAC,EAAAA,MAAM,GAAG;AACT,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWC,KADhB,CADJ;AAIE;;AAZiC;;AAcvC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADV,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAA2DE,QAA3D,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchBuilding, changePhaseTo } from './../../actions'\r\nimport data from './buildings.json';\r\n\r\nclass Building extends React.Component {\r\n   // const [f_building, setF_building] = useState([]);\r\n\r\n   componentDidMount() {\r\n    fetchBuilding(data.Well);\r\n   }\r\n    \r\n    render() {\r\n    return(\r\n        <div>\r\n            {this.props.title}\r\n        </div>\r\n    )}\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchBuilding, changePhaseTo })(Building);"]},"metadata":{},"sourceType":"module"}