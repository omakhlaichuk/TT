{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\PatternDetector.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; //import { selectResource, changePhaseTo, placeResource, clearSelection } from '../actions';\n\nconst PatternDetector = ({\n  selectedPattern,\n  board\n}) => {\n  const showPattern = () => {\n    /*const preparedPattern = [];\r\n      selectedPattern.forEach(cell => {\r\n        preparedPattern.push( {\r\n           x: cell.toString().charAt(0),\r\n           y: cell.toString().charAt(1),\r\n           resource: board[cell]\r\n        });\r\n    });\r\n    */\n    const preparedPattern = selectedPattern.map(cell => {\n      return {\n        x: cell.toString().charAt(0),\n        y: cell.toString().charAt(1),\n        resource: board[cell]\n      };\n    });\n    const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\n    const dy = Math.min(...preparedPattern.map(cell => Number(cell.y))) - 1;\n    console.log(dy);\n    const movedPattern = [];\n    preparedPattern.forEach(cell => {\n      movedPattern.push({\n        x: cell.x - dx,\n        y: cell.y - dy,\n        resource: cell.resource\n      });\n    });\n    console.log(movedPattern);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => showPattern(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Show Pattern\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedPattern: state.selectedPattern,\n    board: state.board\n  };\n};\n\nexport default connect(mapStateToProps, {})(PatternDetector);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\PatternDetector.js"],"names":["React","connect","PatternDetector","selectedPattern","board","showPattern","preparedPattern","map","cell","x","toString","charAt","y","resource","dx","Math","min","Number","dy","console","log","movedPattern","forEach","push","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AACpD,QAAMC,WAAW,GAAG,MAAM;AACtB;;;;;;;;;AAUD,UAAMC,eAAe,GAAGH,eAAe,CAACI,GAAhB,CAAoBC,IAAI,IAAI;AAAE,aAAO;AACxDC,QAAAA,CAAC,EAAED,IAAI,CAACE,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CADqD;AAExDC,QAAAA,CAAC,EAAEJ,IAAI,CAACE,QAAL,GAAgBC,MAAhB,CAAuB,CAAvB,CAFqD;AAGxDE,QAAAA,QAAQ,EAAET,KAAK,CAACI,IAAD;AAHyC,OAAP;AAIlD,KAJoB,CAAxB;AAMC,UAAMM,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGV,eAAe,CAACC,GAAhB,CAAoBC,IAAI,IAAIS,MAAM,CAACT,IAAI,CAACC,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AACA,UAAMS,EAAE,GAAGH,IAAI,CAACC,GAAL,CAAS,GAAGV,eAAe,CAACC,GAAhB,CAAoBC,IAAI,IAAIS,MAAM,CAACT,IAAI,CAACI,CAAN,CAAlC,CAAZ,IAA2D,CAAtE;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,UAAMG,YAAY,GAAG,EAArB;AACAf,IAAAA,eAAe,CAACgB,OAAhB,CAAwBd,IAAI,IAAI;AAC5Ba,MAAAA,YAAY,CAACE,IAAb,CAAkB;AACdd,QAAAA,CAAC,EAAED,IAAI,CAACC,CAAL,GAASK,EADE;AAEdF,QAAAA,CAAC,EAAEJ,IAAI,CAACI,CAAL,GAASM,EAFE;AAGdL,QAAAA,QAAQ,EAAEL,IAAI,CAACK;AAHD,OAAlB;AAMH,KAPD;AASAM,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACH,GAjCD;;AAoCA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMhB,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH,CA1CD;;AA4CA,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHtB,IAAAA,eAAe,EAAEsB,KAAK,CAACtB,eADpB;AAEHC,IAAAA,KAAK,EAAEqB,KAAK,CAACrB;AAFV,GAAP;AAKH,CAND;;AAQA,eAAeH,OAAO,CAACuB,eAAD,EAAkB,EAAlB,CAAP,CAA6BtB,eAA7B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//import { selectResource, changePhaseTo, placeResource, clearSelection } from '../actions';\r\n\r\nconst PatternDetector = ({ selectedPattern, board }) => {\r\n    const showPattern = () => {\r\n        /*const preparedPattern = [];\r\n\r\n        selectedPattern.forEach(cell => {\r\n            preparedPattern.push( {\r\n               x: cell.toString().charAt(0),\r\n               y: cell.toString().charAt(1),\r\n               resource: board[cell]\r\n            });\r\n        });\r\n        */\r\n       const preparedPattern = selectedPattern.map(cell => { return {\r\n            x: cell.toString().charAt(0),\r\n            y: cell.toString().charAt(1),\r\n            resource: board[cell]\r\n         }})\r\n\r\n        const dx = Math.min(...preparedPattern.map(cell => Number(cell.x))) - 1;\r\n        const dy = Math.min(...preparedPattern.map(cell => Number(cell.y))) - 1;\r\n\r\n        console.log(dy)\r\n\r\n        const movedPattern = [];\r\n        preparedPattern.forEach(cell => {\r\n            movedPattern.push({\r\n                x: cell.x - dx,\r\n                y: cell.y - dy,\r\n                resource: cell.resource\r\n\r\n            })\r\n        });\r\n\r\n        console.log(movedPattern);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => showPattern()}>Show Pattern</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedPattern: state.selectedPattern,\r\n        board: state.board\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PatternDetector);\r\n"]},"metadata":{},"sourceType":"module"}