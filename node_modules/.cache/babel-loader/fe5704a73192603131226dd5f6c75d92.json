{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pro\\\\React\\\\tlt\\\\src\\\\components\\\\Resources.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { selectResource, changePhaseTo } from '../actions';\n\nclass Resources extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resourceSelection = resource => {\n      if (this.props.phase === \"PHASE_CHOOSING_RESOURCE\") {\n        if (resource !== \"?\") {\n          this.props.selectResource(resource);\n        } else {\n          //TODO change to card random\n          this.props.selectResource(\"random resource\");\n        }\n      }\n    };\n\n    this.resourcePlacing = () => {\n      this.props.changePhaseTo(\"PHASE_PLACING_RESOURCE\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Select resource:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Wood\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Wood\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Wheat\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Wheat\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Brick\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Brick\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Glass\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Glass\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"Stone\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Stone\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.resourceSelection(\"?\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"?\"), \"Selected:\", React.createElement(\"button\", {\n      onClick: () => {\n        this.resourcePlacing();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.selectedResource));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedResource: state.selectedResource,\n    phase: state.phase\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectResource,\n  changePhaseTo\n})(Resources);","map":{"version":3,"sources":["D:\\Pro\\React\\tlt\\src\\components\\Resources.js"],"names":["React","useEffect","connect","selectResource","changePhaseTo","Resources","Component","resourceSelection","resource","props","phase","resourcePlacing","render","selectedResource","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;;AAGA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAGpCC,iBAHoC,GAGhBC,QAAQ,IAAI;AAC5B,UAAI,KAAKC,KAAL,CAAWC,KAAX,KAAqB,yBAAzB,EAAoD;AAChD,YAAIF,QAAQ,KAAK,GAAjB,EAAsB;AAClB,eAAKC,KAAL,CAAWN,cAAX,CAA0BK,QAA1B;AACH,SAFD,MAEO;AACH;AACA,eAAKC,KAAL,CAAWN,cAAX,CAA0B,iBAA1B;AACH;AAEJ;AACJ,KAbmC;;AAAA,SAepCQ,eAfoC,GAelB,MAAM;AACpB,WAAKF,KAAL,CAAWL,aAAX,CAAyB,wBAAzB;AACH,KAjBmC;AAAA;;AAmBpCQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKL,iBAAL,CAAuB,MAAvB;AAAgC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,OAAvB;AAAiC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,EAOI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKA,iBAAL,CAAuB,GAAvB;AAA6B,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPJ,eASI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKI,eAAL;AAAwB,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWI,gBADhB,CATJ,CADJ;AAgBH;;AApCmC;;AAuCxC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,gBAAgB,EAAEE,KAAK,CAACF,gBADrB;AAEHH,IAAAA,KAAK,EAAEK,KAAK,CAACL;AAFV,GAAP;AAIH,CALD;;AAOA,eAAeR,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CAA4DC,SAA5D,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectResource, changePhaseTo } from '../actions';\r\n\r\n\r\nclass Resources extends React.Component {\r\n    //During PHASE_CHOOSING_RESOURCE If you the first player you can select one of 5 resources\r\n    //if you are the second - get random resource.\r\n    resourceSelection = resource => {\r\n        if (this.props.phase === \"PHASE_CHOOSING_RESOURCE\") {\r\n            if (resource !== \"?\") {\r\n                this.props.selectResource(resource);\r\n            } else {\r\n                //TODO change to card random\r\n                this.props.selectResource(\"random resource\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    resourcePlacing = () => {\r\n        this.props.changePhaseTo(\"PHASE_PLACING_RESOURCE\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Select resource:\r\n                <button onClick={() => { this.resourceSelection(\"Wood\") }}>Wood</button>\r\n                <button onClick={() => { this.resourceSelection(\"Wheat\") }}>Wheat</button>\r\n                <button onClick={() => { this.resourceSelection(\"Brick\") }}>Brick</button>\r\n                <button onClick={() => { this.resourceSelection(\"Glass\") }}>Glass</button>\r\n                <button onClick={() => { this.resourceSelection(\"Stone\") }}>Stone</button>\r\n                <button onClick={() => { this.resourceSelection(\"?\") }}>?</button>\r\n                Selected:\r\n                <button onClick={() => { this.resourcePlacing() }}>\r\n                    {this.props.selectedResource}\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedResource: state.selectedResource,\r\n        phase: state.phase\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectResource, changePhaseTo })(Resources);\r\n"]},"metadata":{},"sourceType":"module"}